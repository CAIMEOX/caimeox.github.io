\title{Categorical Semantics for Type Theories}
\taxon{Type Theory}
\date{2024-3-21}
\import{macros}
\p{
    This is a collection of notes on categorical semantics for type theories.
    The notes are based on the [paper](cs-tt-2020) by Jason Z.S. Hu and [NLab](ncatlab).
}
\subtree{
    \title{Introduction}
    \p{
        Over the last few decades, many type systems are designed for different purposes:
        general program safety, security, and correctness. The \strong{categorical semantics}
        is a collection of methods which define meanings of types and programs in category theory.
    }
    \p{
        Category theory is a branch of mathematics studying an abstract kind of mappings, called morphisms,
        and their algebraic relations. Its generality serves as a common language for navigating connections
        between different concepts in different areas. We will first go over some basic concepts in category theory.
    }
}
\subtree{
    \title{Basic Category Theory concepts}
    \p{
        Formally, a definition in category theory consists of two parts: data and axioms.
        The most basic definition is the \strong{category}
    }
    \transclude{def-003E}
    \p{
        We only talk about \strong{collections} here, which is vague, because we do not specify 
        they are sets or classes. If both objects and morphisms fit in sets, we say the category
        is \strong{small}. For a counterexample, the category of all sets is not small. However,
        all functions between sets can be contained in a set. In this case, the category is \strong{locally small}.
        When morphisms between two objects fit in a set, we call the set \strong{hom-set}.
    }
    \p{
        Since category theory is constructed to study structures and a category is actually a structure,
        we can talk about the category of all small categories #{\cat}. Similar to morphisms, we can 
        define \strong{functor} between categories.
    }
    \transclude{def-003G}
    \p{
        We can push this idea further by considering functors as objects and \strong{natural transformations} as morphisms.
    }
    \transclude{def-003I}
    \p{
        Here we use a \strong{commutative diagram} to represent a natural transformation.
        When a diagram commutes, morphisms composed by different paths with the same end points
        are equal. The following diagram represents the equality that #{G(f)\circ\alpha_x = \alpha_y\circ F(f)}.
    }
    \transclude{def-003J}
}
\subtree{
    \title{Basic Category Theory Structures}
    \p{
        Though the theory is already rich by only considering sets and categories, 
        it would not be interesting enough. We want to know a little more about the 
        category that we are working with. To achieve so, we can require some additional
        structures on the category.
    }
    \transclude{def-003P}
}