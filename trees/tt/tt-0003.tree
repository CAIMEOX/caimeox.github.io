\title{Natural Numbers #{\mathbb{N}}}
\date{2024-01-30}
\taxon{Type Theory}
\import{macros}
\p{
    In previous post, we have seen the basic inference rules of type theory.
    Now we will see the definition of natural numbers as an inductive type.
    Refer to [HoTT Book](hott-book-2013) and [Egbert Rijke's](hott-2022).
}
\p{
    In classical mathematics, the \strong{Peano axioms} are a set of axioms for the natural numbers,
    an important object in mathematics.
}
\p{
    In type theory, the type #{\N} of natural number is an [\strong{inductive type}](def-001X).
    Just like in dependent function type, we need four inference rules to define the natural numbers.
}
\transclude{def-001Y}
\p{
    Now let's use the type theoretical induction principle of #{\N} to
    perform some basic construction over #{\N}.
}
\transclude{def-001Z}
\p{
    Recall the definition of addition function #{\text{add}: \N\to(\N\to\N)} satisfying the specification:
    ##{
        \begin{align*}
            m + 0 & :\equiv m
            \\ 
            m + \succ(n) & :\equiv \succ(m + n)
        \end{align*}
    }
    Such definition is enough to characterize the addition function.
    Because it postulates te \em{behavior} of #{\text{add}_\N} at the constructor of #{\N}
}
\p{
    More generally, we can define a dependent function #{f:\Pi n:\N.P(n)} by induction on #{n} using
    ##{
        \begin{align*}
            p_0 & : P(0)
            \\
            p_S & : \Pi_{(n:\N)}P(n)\to P(\succ(n))
        \end{align*}
    }
    Just present the definition by writing
    ##{
        \begin{align*}
            f(0) & :\equiv p_0
            \\
            f(\succ(n)) & :\equiv p_S(n,f(n))
        \end{align*}
    }
    #{f} is said to be defined by \strong{pattern matching} on the variable #{n}.
}
\transclude{eg-0001}
