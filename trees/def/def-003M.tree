\title{Finite Automata}
\taxon{Definition}
\p{
    A \strong{finite automata (FA)} is a five-tuple #{(S,\Sigma,\delta,s_0,S_A)} where
    \ul{
        \li{
            #{S} is the finite set of states in the recognizer including #{s_e},
            the error state.
        }
        \li{
            #{\Sigma} is the finite alphabet used by the recognizer. 
            #{\Sigma} is the union of the edge labels in the transition diagram.
        }
        \li{
            #{\delta(s, c)} is the recognizer's transition function, which 
            maps each state #{s\in S} and character #{c\in\Sigma} into some next state.
            In state #{s_i} with input character #{c} the FA takes the transition
            #{s_i \xrightarrow{c} \delta(s_i, c)}.
        }
        \li{
            #{s_0\in S} is the initial state of the recognizer.
        }
        \li{
            #{S_A} is the set of accepting states, #{S_A\subseteq S}.
        }
    }
    #{\delta} is only partially defined. For all other combinations of the 
    state #{s_i} and input char #{c} we can define #{\delta(s_i,c)=s_e}.
}