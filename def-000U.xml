<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="default.xsl"?><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="true" expanded="true" root="false"><fr:frontmatter><fr:anchor>1183</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000U</fr:addr><fr:route>def-000U.xml</fr:route><fr:title>Principle of Comprehension</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Given a set <fr:tex>A</fr:tex> and a property <fr:tex>P(x)</fr:tex>, there exists a set <fr:tex>B</fr:tex> such that
    <fr:tex>x \in  B  \iff  x \in  A  \land  P(x)</fr:tex>.
</fr:p></fr:mainmatter><fr:backmatter><fr:contributions></fr:contributions><fr:context><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="false" show-heading="true" show-metadata="true" expanded="true" root="false"><fr:frontmatter><fr:anchor>1181</fr:anchor><fr:taxon>Set Theory</fr:taxon><fr:addr>math-0003</fr:addr><fr:route>math-0003.xml</fr:route><fr:title>Set Theory</fr:title><fr:date><fr:year>2024</fr:year><fr:month>1</fr:month><fr:day>26</fr:day></fr:date></fr:frontmatter><fr:mainmatter><fr:p>
    Refer to <fr:link href="cat-sci-2013.xml" type="local" addr="cat-sci-2013">Category Theory for Scientists</fr:link>.
</fr:p><fr:p><fr:strong>Set</fr:strong> is a common concept in mathematics.
    This post is a brief introduction to set theory aimed at 
    complete all basic knowledge of set theory.
    The following topics will be covered
    <fr:ul><fr:li><fr:strong>Zermelo-Fraenkel Axioms</fr:strong> and <fr:strong>Axiom of Choice</fr:strong></fr:li>
        <fr:li>Cardinality</fr:li>
        <fr:li>Set theory constructions</fr:li></fr:ul></fr:p><fr:p>
    In this post, we use the Zermelo-Fraenkel set theory with the Axiom of Choice (<fr:strong>ZFC</fr:strong>).
</fr:p><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>270</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000S</fr:addr><fr:route>def-000S.xml</fr:route><fr:title>ZFC Set</fr:title></fr:frontmatter><fr:mainmatter><fr:p><fr:strong>ZFC</fr:strong> is the abbreviation of Zermelo-Fraenkel set theory with the Axiom of Choice.
    The axioms of ZFC are listed below.
    <fr:ul><fr:li><fr:strong>Axiom of Extensionality</fr:strong>:
            Two sets are equal if and only if they have the same elements.
        </fr:li>
        <fr:li><fr:strong>Axiom of Pairing</fr:strong>:
            For any two sets <fr:tex>a</fr:tex> and <fr:tex>b</fr:tex>,
            there exists a set <fr:tex>\{   a,b   \}</fr:tex> whose elements are exactly <fr:tex>a</fr:tex> and <fr:tex>b</fr:tex>.
        </fr:li>
        <fr:li><fr:strong>Axiom schema of Separation</fr:strong>:
            Let <fr:tex>P</fr:tex> is a property of sets.
            <fr:tex>P(u)</fr:tex> means <fr:tex>u</fr:tex> satisfies the property <fr:tex>P</fr:tex>.
            then for any set <fr:tex>X</fr:tex> exists <fr:tex>Y =  \{   u  \in  X | P(u)   \}</fr:tex>.
        </fr:li>
        <fr:li><fr:strong>Axiom of Union</fr:strong>:
            For any set <fr:tex>X</fr:tex> (a family of sets), exists union set <fr:tex>\bigcup  X : \equiv   \{                    u: \exists  v \in  X  \text { such that } u \in  v                \}</fr:tex>.
        </fr:li>
        <fr:li><fr:strong>Axiom of Power Set</fr:strong>:
            For any set <fr:tex>X</fr:tex>, exists the power <fr:tex>P(X) : \equiv   \{   Y:Y \subseteq  X   \}</fr:tex>.
        </fr:li>
        <fr:li><fr:strong>Axiom of Infinity</fr:strong>:
            There exists a set <fr:tex>\omega</fr:tex> such that <fr:tex>\emptyset \in \omega</fr:tex> and for any <fr:tex>x \in \omega</fr:tex>, <fr:tex>x \cup \{   x   \} \in \omega</fr:tex>.
        </fr:li>
        <fr:li><fr:strong>Axiom of Regularity</fr:strong>:
            For any non-empty set there is a minimal element with respect to the membership relation.
        </fr:li>
        <fr:li><fr:strong>Axiom schema of Replacement</fr:strong>:
            Let <fr:tex>F</fr:tex> be a function where <fr:tex>\text {dom }  f = X</fr:tex>, then for any set <fr:tex>X</fr:tex> exists a set <fr:tex>Y =  \{   F(x):x \in  X   \}</fr:tex>.
            <fr:p>
                This function is not the normal function but some logical stuff.
            </fr:p></fr:li>
        <fr:li><fr:strong>Axiom of Choice</fr:strong>:
            For any family of non-empty sets <fr:tex>X</fr:tex>, there exists a function <fr:tex>f:X \to \bigcup  X</fr:tex> such that for any <fr:tex>x \in  X</fr:tex>, <fr:tex>f(x) \in  x</fr:tex>.
        </fr:li></fr:ul></fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>275</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-002V</fr:addr><fr:route>def-002V.xml</fr:route><fr:title>Set Operations</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Let <fr:tex>(X_i)_{i \in  I}</fr:tex> be a family of sets.
</fr:p><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>271</fr:anchor><fr:title>Union</fr:title><fr:parent>def-002V</fr:parent></fr:frontmatter><fr:mainmatter><fr:p><fr:tex display="block">          \bigcup _{i \in  I}X_i =  \set {x: \exists  i \in  I  \text { such that } x \in  X_i}     </fr:tex></fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>272</fr:anchor><fr:title>Intersection</fr:title><fr:parent>def-002V</fr:parent></fr:frontmatter><fr:mainmatter><fr:p><fr:tex display="block">          \bigcap _{i \in  I}X_i =  \set {x: \forall  i \in  I, x \in  X_i}     </fr:tex>
    Note that <fr:tex>I  \neq   \emptyset</fr:tex> here.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>273</fr:anchor><fr:title>Disjoint Union</fr:title><fr:parent>def-002V</fr:parent></fr:frontmatter><fr:mainmatter><fr:p><fr:tex display="block">          \bigsqcup _{i \in  I}X_i =  \set {(x,i):x \in  X_i, i \in  I}     </fr:tex></fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>274</fr:anchor><fr:title>Product</fr:title><fr:parent>def-002V</fr:parent></fr:frontmatter><fr:mainmatter><fr:p><fr:tex display="block">          \prod _{i \in  I}X_i =  \set {(x_i)_{i \in  I}: \forall  i \in  I, x_i \in  X_i}     </fr:tex></fr:p></fr:mainmatter></fr:tree></fr:mainmatter></fr:tree><fr:p>
    And principles of set theory
</fr:p><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>276</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000T</fr:addr><fr:route>def-000T.xml</fr:route><fr:title>Principle of Extensionality</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Two sets are equal if and only if they have the same elements.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>277</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000U</fr:addr><fr:route>def-000U.xml</fr:route><fr:title>Principle of Comprehension</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Given a set <fr:tex>A</fr:tex> and a property <fr:tex>P(x)</fr:tex>, there exists a set <fr:tex>B</fr:tex> such that
    <fr:tex>x \in  B  \iff  x \in  A  \land  P(x)</fr:tex>.
</fr:p></fr:mainmatter></fr:tree><fr:p>
    We then define the Cartesian product of two sets
</fr:p><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>278</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000V</fr:addr><fr:route>def-000V.xml</fr:route><fr:title>Cartesian product</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Given two sets <fr:tex>A</fr:tex> and <fr:tex>B</fr:tex>, the Cartesian product <fr:tex>A \times  B</fr:tex> is the set
    of all ordered pairs <fr:tex>(a,b)</fr:tex> where <fr:tex>a \in  A</fr:tex> and <fr:tex>b \in  B</fr:tex>.
</fr:p></fr:mainmatter></fr:tree><fr:p>
    With the Cartesian product, we can define the relation
</fr:p><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>279</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000W</fr:addr><fr:route>def-000W.xml</fr:route><fr:title>Relation</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    A <fr:strong>relation</fr:strong> <fr:tex>R</fr:tex> is a subset of the Cartesian product of two sets <fr:tex>A</fr:tex> and
    <fr:tex>B</fr:tex>, i.e. <fr:tex>R \subseteq  A \times  B</fr:tex>.
    If <fr:tex>(a,b) \in  R</fr:tex>, we write <fr:tex>aRb</fr:tex>.

    A relation that between <fr:tex>X</fr:tex> and itself is called <fr:strong>homogeneous relation</fr:strong>.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>280</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000X</fr:addr><fr:route>def-000X.xml</fr:route><fr:title>Equivalence Relation</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    An equivalence relation <fr:tex>R</fr:tex> on a set <fr:tex>A</fr:tex> is a <fr:link href="def-000W.xml" type="local" addr="def-000W">relation</fr:link> that is reflexive,
    symmetric, and transitive.
    <fr:ul><fr:li>Reflexive:
            <fr:tex>\forall  x \in  A, xRx</fr:tex></fr:li>
        <fr:li>Symmetric:
            <fr:tex>\forall  x,y \in  A, xRy \implies  yRx</fr:tex></fr:li>
        <fr:li>Transitive:
            <fr:tex>\forall  x,y,z \in  A, xRy \land  yRz \implies  xRz</fr:tex></fr:li></fr:ul>
    We often denote the equivalence relation by <fr:tex>\sim</fr:tex>.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>281</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-002U</fr:addr><fr:route>def-002U.xml</fr:route><fr:title>Equivalence Class</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Let <fr:tex>\sim</fr:tex> be an <fr:link href="def-000X.xml" type="local" addr="def-000X">equivalence relation</fr:link> on a set <fr:tex>A</fr:tex>.
    For any element <fr:tex>a \in  A</fr:tex>, the <fr:strong>equivalence class</fr:strong> of <fr:tex>a</fr:tex> is the set
    <fr:tex>[a] =  \set {b \in  A:b \sim  a}</fr:tex>.
    The set of all equivalence classes is denoted by <fr:tex>A/ \sim</fr:tex>,
    which is called the <fr:strong>quotient set</fr:strong> of <fr:tex>A</fr:tex> by <fr:tex>\sim</fr:tex>.
    <fr:p>
        The equivalence class of <fr:tex>a</fr:tex> is also denoted by <fr:tex>\overline {a}</fr:tex>.
    </fr:p></fr:p></fr:mainmatter></fr:tree><fr:p>
    One of the most important relations is the order relation.
    The basic order relation is the preorder.
</fr:p><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>282</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000Z</fr:addr><fr:route>def-000Z.xml</fr:route><fr:title>Preorder</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    A <fr:strong>preorder</fr:strong> is a relation <fr:tex>\leq</fr:tex> that is reflexive and transitive.
    <fr:ul><fr:li>Reflexive: <fr:tex>a \leq  a</fr:tex></fr:li>
        <fr:li>Transitive: <fr:tex>a \leq  b</fr:tex> and <fr:tex>b \leq  c</fr:tex> implies <fr:tex>a \leq  c</fr:tex></fr:li></fr:ul></fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>283</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000Y</fr:addr><fr:route>def-000Y.xml</fr:route><fr:title>Partial Order</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    A <fr:strong>(non-strict) partial order</fr:strong> is a relation <fr:tex>\leq</fr:tex> that is reflexive, antisymmetric and transitive.
    <fr:ul><fr:li>Reflexive: <fr:tex>a \leq  a</fr:tex></fr:li>
        <fr:li>Antisymmetric: <fr:tex>a \leq  b</fr:tex> and <fr:tex>b \leq  a</fr:tex> implies <fr:tex>a=b</fr:tex></fr:li>
        <fr:li>Transitive: <fr:tex>a \leq  b</fr:tex> and <fr:tex>b \leq  c</fr:tex> implies <fr:tex>a \leq  c</fr:tex></fr:li></fr:ul>
    A non-strict partial order is also known as an antisymmetric <fr:link href="def-000Z.xml" type="local" addr="def-000Z">preorder</fr:link>.
</fr:p></fr:mainmatter></fr:tree><fr:p>
    And the strict partial order (notice the difference between asymmetric and antisymmetric)
</fr:p><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>284</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-0010</fr:addr><fr:route>def-0010.xml</fr:route><fr:title>Strict partial orders</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    A strict partial order is a relation <fr:tex>&lt;</fr:tex> that is irreflexive, asymmetric and transitive.
    <fr:ul><fr:li>Irreflexive: <fr:tex>\neg (a&lt;a)</fr:tex></fr:li>
        <fr:li>Asymmetric: <fr:tex>a&lt;b</fr:tex> implies <fr:tex>\neg (b&lt;a)</fr:tex></fr:li>
        <fr:li>Transitive: <fr:tex>a&lt;b</fr:tex> and <fr:tex>b&lt;c</fr:tex> implies <fr:tex>a&lt;c</fr:tex></fr:li></fr:ul></fr:p></fr:mainmatter></fr:tree><fr:p>
    With the definition of order, we can define the upper bound and lower bound
</fr:p><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>285</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-0011</fr:addr><fr:route>def-0011.xml</fr:route><fr:title>Upper Bound and Lower Bound</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Let a subset <fr:tex>S</fr:tex> of a <fr:link href="def-000Y.xml" type="local" addr="def-000Y">partially ordered</fr:link> set <fr:tex>(P,  \leq )</fr:tex>,
    <fr:tex>S</fr:tex> is bounded above if there exists <fr:tex>x  \in  P</fr:tex> such that <fr:tex>\forall  y  \in  S, y  \leq  x</fr:tex>. And <fr:tex>x</fr:tex> is called an <fr:strong>upper bound</fr:strong> of <fr:tex>S</fr:tex>.
    Dually, <fr:tex>S</fr:tex> is bounded below if there exists <fr:tex>x  \in  P</fr:tex> such that <fr:tex>\forall  y  \in  S, x  \leq  y</fr:tex>. And <fr:tex>x</fr:tex> is called a <fr:strong>lower bound</fr:strong> of <fr:tex>S</fr:tex>.
</fr:p>
    <fr:p><fr:strong>Supremum (least upper bound)</fr:strong></fr:p>
    <fr:p>
    An element <fr:tex>x \in  P</fr:tex> is a supremum of <fr:tex>S</fr:tex>,
    if for all upper bounds <fr:tex>z  \in  P</fr:tex> of <fr:tex>S</fr:tex>, <fr:tex>x  \leq  z</fr:tex>.
    Denoted as <fr:tex>x =  \sup  S</fr:tex>.
    </fr:p>
    <fr:p><fr:strong>Infimum (greatest lower bound)</fr:strong></fr:p>
    <fr:p>
    An element <fr:tex>x \in  P</fr:tex> is a infimum of <fr:tex>S</fr:tex>,
    if for all lower bounds <fr:tex>z  \in  P</fr:tex> of <fr:tex>S</fr:tex>, <fr:tex>z  \leq  x</fr:tex>.
    Denoted as <fr:tex>x =  \inf  S</fr:tex>.
    </fr:p>
</fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>286</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-002G</fr:addr><fr:route>def-002G.xml</fr:route><fr:title>Function</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Let <fr:tex>X</fr:tex> and <fr:tex>Y</fr:tex> be sets then a <fr:strong>function</fr:strong> <fr:tex>f:X  \to  Y</fr:tex>
    is a mapping that sends each element of <fr:tex>X</fr:tex> to a unique element of <fr:tex>Y</fr:tex>,
    denoted by <fr:tex>f(x) = y</fr:tex>.
    Function is a special case of <fr:link href="def-000W.xml" type="local" addr="def-000W">relation</fr:link>, and it is a relation that is left-total and right-unique.
    <fr:tex display="block">         f  \in  X  \times  Y  \text { and }  \forall  x  \in  X,  \exists ! y  \in  Y, (x,y)  \in  f     </fr:tex>
    <fr:tex>X</fr:tex> is said to be the <fr:strong>domain</fr:strong> of <fr:tex>f</fr:tex> and <fr:tex>Y</fr:tex> is said to be the <fr:strong>codomain</fr:strong> of <fr:tex>f</fr:tex>,
    where we denote <fr:tex>X =  \text {dom }  f</fr:tex> and <fr:tex>Y =  \text {cod }  f</fr:tex>.
</fr:p><fr:p>
    Two functions <fr:tex>f:X \to  Y</fr:tex> and <fr:tex>g:Y \to  Z</fr:tex> can be <fr:strong>composed</fr:strong> to form a new function <fr:tex>g  \circ  f : X  \to  Z</fr:tex>,
    where the composition is defined by
    <fr:tex display="block">         (g  \circ  f)(x) = g(f(x))      </fr:tex></fr:p><fr:p>
    The set of all functions from <fr:tex>X</fr:tex> to <fr:tex>Y</fr:tex> is denoted by <fr:tex>\hom _ \text {set} (X, Y)</fr:tex>.
</fr:p></fr:mainmatter></fr:tree><fr:p>
    The isomorphism function is defined as follows
</fr:p><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>287</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-002H</fr:addr><fr:route>def-002H.xml</fr:route><fr:title>Set Isomorphism</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Let <fr:tex>X</fr:tex> and <fr:tex>Y</fr:tex> be sets and <fr:tex>f: X  \to  Y</fr:tex> be a function.
    The function <fr:tex>f</fr:tex> is called an <fr:strong>isomorphism</fr:strong> if it is both <fr:link href="def-002D.xml" type="local" addr="def-002D">injective</fr:link> and <fr:link href="def-002F.xml" type="local" addr="def-002F">surjective</fr:link>.
    In other words, there exists a function <fr:tex>g: Y  \to  X</fr:tex> such that
    <fr:tex display="block">         g  \circ  f =  \text {id} _X  \text { and } f  \circ  g =  \text {id} _Y     </fr:tex>
    where <fr:tex>\text {id} _X</fr:tex> and <fr:tex>\text {id} _Y</fr:tex> are the <fr:strong>identity functions</fr:strong> on <fr:tex>X</fr:tex> and <fr:tex>Y</fr:tex> respectively.
    And we say <fr:tex>f</fr:tex> is <fr:strong>invertible</fr:strong> and <fr:tex>g</fr:tex> is the <fr:strong>inverse</fr:strong> of <fr:tex>f</fr:tex>.
    If there is a isomorphism between <fr:tex>X</fr:tex> and <fr:tex>Y</fr:tex>, we say <fr:tex>X</fr:tex> and <fr:tex>Y</fr:tex> are <fr:strong>isomorphic</fr:strong>,
    denoted by <fr:tex>X  \cong  Y</fr:tex>.
    Isomorphism is an <fr:link href="def-000X.xml" type="local" addr="def-000X">equivalence relation</fr:link>.
</fr:p></fr:mainmatter></fr:tree><fr:p>
    With isomorphism, we can define the cardinality of a set.
    Two isomorphic sets have the same cardinality.
</fr:p><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>288</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-002I</fr:addr><fr:route>def-002I.xml</fr:route><fr:title>Cardinality</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Let <fr:tex>X</fr:tex> be a set and <fr:tex>n  \in   \mathbb {N}</fr:tex>. 
    <fr:tex>A</fr:tex> si said to have <fr:strong>cardinality</fr:strong> <fr:tex>n</fr:tex>, denoted by <fr:tex> |A|= n</fr:tex>,
    if there exists an isomorphism between <fr:tex>A</fr:tex> and <fr:tex>S_n =  \{   1,2, \cdots ,n   \}</fr:tex>.
    If <fr:tex>A</fr:tex> has finite cardinality, we say <fr:tex>A</fr:tex> is <fr:strong>finite</fr:strong>, otherwise
    we say <fr:tex>A</fr:tex> is <fr:strong>infinite</fr:strong>, denoted by <fr:tex>|A|  \geq   \infty</fr:tex>.
</fr:p></fr:mainmatter></fr:tree><fr:p>
    The next topic is the product of sets
</fr:p><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>289</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-002J</fr:addr><fr:route>def-002J.xml</fr:route><fr:title>Product of Sets</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Let <fr:tex>X</fr:tex> and <fr:tex>Y</fr:tex> be sets, then the <fr:strong>Cartesian product</fr:strong> of <fr:tex>X</fr:tex> and <fr:tex>Y</fr:tex> is the set
    <fr:tex display="block">         X  \times  Y =  \set {(x,y)  \mid  x  \in  X  \text { and } y  \in  Y}     </fr:tex>
    There are two natural projections from the Cartesian product to the original sets, namely
    <fr:tex display="block">          \pi _1 : X  \times  Y  \to  X  \text { and }  \pi _2 : X  \times  Y  \to  Y     </fr:tex></fr:p></fr:mainmatter></fr:tree><fr:p>
    This leads to an improtant concept named <fr:strong>universal property</fr:strong>.
</fr:p><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>290</fr:anchor><fr:taxon>Lemma</fr:taxon><fr:addr>thm-000J</fr:addr><fr:route>thm-000J.xml</fr:route><fr:title>Universal Property for Product of Sets</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Let <fr:tex>X</fr:tex> and <fr:tex>Y</fr:tex> be sets.
    For any set <fr:tex>A</fr:tex> and function
    <fr:tex>f: A  \to  X</fr:tex> and <fr:tex>g: A  \to  Y</fr:tex>,
    there exists a <fr:em>unique</fr:em> function <fr:tex>h: A  \to  X  \times  Y</fr:tex> such that
    the following diagram commutes:
    
    <fr:embedded-tex hash="4157eb89f51117c585cb94d00d036a56"><fr:embedded-tex-preamble>
       \usepackage {tikz-cd}
       \usepackage {amssymb}
    </fr:embedded-tex-preamble><fr:embedded-tex-body>
         
         \begin {tikzcd}
            &amp; {X \times  Y}  \\ 
            X &amp;&amp; Y  \\ 
            &amp; A
             \arrow [&quot;{ \pi _1}&quot;&apos;, from=1-2, to=2-1]
             \arrow [&quot;{ \pi _2}&quot;, from=1-2, to=2-3]
             \arrow [&quot;f&quot;, from=3-2, to=2-1]
             \arrow [&quot;g&quot;&apos;, from=3-2, to=2-3]
             \arrow [&quot;{ \exists !}&quot;, dashed, from=3-2, to=1-2]
         \end {tikzcd}
     
    </fr:embedded-tex-body></fr:embedded-tex>

    We might denote the unique function by <fr:tex>\langle  f,g  \rangle : A  \to  X  \times  Y</fr:tex>.
    It is sufficient to define <fr:tex>\langle  f,g  \rangle (a) = (f(a),g(a))</fr:tex> for all <fr:tex>a \in  A</fr:tex> as the unique function.
</fr:p></fr:mainmatter></fr:tree><fr:p>
    Dual to the product of sets, we have the coproduct of sets
</fr:p><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>291</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-002K</fr:addr><fr:route>def-002K.xml</fr:route><fr:title>Coproduct of Sets</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Let <fr:tex>X</fr:tex> and <fr:tex>Y</fr:tex> be sets, then the <fr:strong>coproduct</fr:strong> of <fr:tex>X</fr:tex> and <fr:tex>Y</fr:tex> is 
    defined as the <fr:strong>disjoint union</fr:strong> of <fr:tex>X</fr:tex> and <fr:tex>Y</fr:tex>, denoted by <fr:tex>X  \sqcup  Y</fr:tex>.
    There are two natural injections from the original sets to the coproduct, namely
    <fr:tex display="block">         i_1 : X  \to  X  \sqcup  Y  \text { and } i_2 : Y  \to  X  \sqcup  Y     </fr:tex></fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>292</fr:anchor><fr:taxon>Lemma</fr:taxon><fr:addr>thm-000K</fr:addr><fr:route>thm-000K.xml</fr:route><fr:title>Universal Property for Coproduct of Sets</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Let <fr:tex>X</fr:tex> and <fr:tex>Y</fr:tex> be sets. For any set <fr:tex>A</fr:tex> and function
    <fr:tex>f : X  \to  A</fr:tex> and <fr:tex>g : Y  \to  A</fr:tex>, there exists a <fr:em>unique</fr:em> function
    <fr:tex>h : X  \sqcup  Y  \to  A</fr:tex> such that the following diagram commutes:
    
    <fr:embedded-tex hash="31473672edfba5d6215d76dd08a01a24"><fr:embedded-tex-preamble>
       \usepackage {tikz-cd}
       \usepackage {amssymb}
    </fr:embedded-tex-preamble><fr:embedded-tex-body>
         
         \begin {tikzcd}
            &amp; A  \\ 
            X &amp;&amp; Y  \\ 
            &amp; {X \sqcup  Y}
             \arrow [&quot;{i_1}&quot;&apos;, from=2-1, to=3-2]
             \arrow [&quot;{i_2}&quot;, from=2-3, to=3-2]
             \arrow [&quot;f&quot;, from=2-1, to=1-2]
             \arrow [&quot;g&quot;&apos;, from=2-3, to=1-2]
             \arrow [&quot;{ \exists !}&quot;, dashed, from=3-2, to=1-2]
         \end {tikzcd}   
     
    </fr:embedded-tex-body></fr:embedded-tex>

    We might denote the unique as <fr:tex>f \sqcup  g: X  \sqcup  Y  \to  A</fr:tex>.
</fr:p></fr:mainmatter></fr:tree><fr:p>
    In this section we discuss the <fr:em>limits</fr:em> of variously-shaped diagrams of sets.
</fr:p><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>293</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-002L</fr:addr><fr:route>def-002L.xml</fr:route><fr:title>Pullback of Sets</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Suppose we have sets <fr:tex>X</fr:tex>, <fr:tex>Y</fr:tex>, and <fr:tex>Z</fr:tex> and functions
    <fr:tex>f : X  \to  Z</fr:tex> and <fr:tex>g : Y  \to  Z</fr:tex>.
    
    <fr:embedded-tex hash="aea0109fc5888410344cbfd1c2bfad2d"><fr:embedded-tex-preamble>
       \usepackage {tikz-cd}
       \usepackage {amssymb}
    </fr:embedded-tex-preamble><fr:embedded-tex-body>
         
         \begin {tikzcd}
            &amp; Y  \\ 
            X &amp; Z
             \arrow [&quot;f&quot;&apos;, from=2-1, to=2-2]
             \arrow [&quot;g&quot;, from=1-2, to=2-2]
         \end {tikzcd}
     
    </fr:embedded-tex-body></fr:embedded-tex>

    Its <fr:strong>fiber product</fr:strong> is the set
    <fr:tex display="block">         X  \times _Z Y =  \{   (x,w,y)  \mid  f(x) = w = g(y)   \}      </fr:tex>
    There are obvious projections 
    <fr:tex>          \pi _1 : X  \times _Z Y  \to  X  \text { and }  \pi _2 : X  \times _Z Y  \to  Y     </fr:tex>
    such that the following diagram commutes (<fr:tex>W = X  \times _Z Y</fr:tex>):
    
    <fr:embedded-tex hash="9194755931a1b27a68b010256252d579"><fr:embedded-tex-preamble>
       \usepackage {tikz-cd}
       \usepackage {amssymb}
    </fr:embedded-tex-preamble><fr:embedded-tex-body>
         
         \begin {tikzcd}
            W &amp; Y  \\ 
            X &amp; Z
             \arrow [&quot;f&quot;&apos;, from=2-1, to=2-2]
             \arrow [&quot;g&quot;, from=1-2, to=2-2]
             \arrow [&quot;{ \pi _2}&quot;, from=1-1, to=1-2]
             \arrow [&quot;{ \pi _1}&quot;&apos;, from=1-1, to=2-1]
             \arrow [&quot; \lrcorner &quot;{anchor=center, pos=0.125}, draw=none, from=1-1, to=2-2]
         \end {tikzcd}
     
    </fr:embedded-tex-body></fr:embedded-tex>

    The <fr:strong>pullback</fr:strong> is defined to be any set <fr:tex>W  \cong  X \times _Z Y</fr:tex>
    The corner symbol indicates <fr:tex>W</fr:tex> is a <fr:em>pullback</fr:em></fr:p></fr:mainmatter></fr:tree><fr:p>
    The pullback also satisfies the universal property.
</fr:p><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>294</fr:anchor><fr:taxon>Lemma</fr:taxon><fr:addr>thm-000L</fr:addr><fr:route>thm-000L.xml</fr:route><fr:title>Universal Property for Pullback</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Suppose the given diagram:
    
    <fr:embedded-tex hash="5e6f2da5af96f3d2b5aa340ada59f646"><fr:embedded-tex-preamble>
       \usepackage {tikz-cd}
       \usepackage {amssymb}
    </fr:embedded-tex-preamble><fr:embedded-tex-body>
         
         \begin {tikzcd}
            &amp; Y  \\ 
            X &amp; Z
             \arrow [&quot;t&quot;&apos;, from=2-1, to=2-2]
             \arrow [&quot;u&quot;, from=1-2, to=2-2]
         \end {tikzcd}
     
    </fr:embedded-tex-body></fr:embedded-tex>

    For any set <fr:tex>A</fr:tex> and commutative solid arrow diagram as below
    (functions <fr:tex>f:A \to  X</fr:tex> and <fr:tex>g:A \to  Y</fr:tex> such that <fr:tex>t \circ  f = u \circ  g</fr:tex>):
    
    <fr:embedded-tex hash="2d3ff6bcdbabe8193a5f90642c805f62"><fr:embedded-tex-preamble>
       \usepackage {tikz-cd}
       \usepackage {amssymb}
    </fr:embedded-tex-preamble><fr:embedded-tex-body>
         
         \usetikzlibrary {arrows}
         \begin {tikzcd}
            &amp; {X \times _ZY}  \\ 
             \\ 
            &amp; A  \\ 
            X &amp;&amp; Y  \\ 
            &amp; Z
             \arrow [&quot;f&quot;&apos;, from=3-2, to=4-1]
             \arrow [&quot;g&quot;, from=3-2, to=4-3]
             \arrow [&quot;t&quot;&apos;, from=4-1, to=5-2]
             \arrow [&quot;u&quot;, from=4-3, to=5-2]
             \arrow [&quot;{ \exists !}&quot;, dashed, from=3-2, to=1-2]
             \arrow [&quot;{ \pi _1}&quot;&apos;, bend right, from=1-2, to=4-1]
	         \arrow [&quot;{ \pi _2}&quot;, bend left, from=1-2, to=4-3]
         \end {tikzcd}
     
    </fr:embedded-tex-body></fr:embedded-tex>

    there exists a <fr:em>unique</fr:em> arrow <fr:tex>\langle  f,g  \rangle _Z: A \to  X \times _Z Y</fr:tex> such that
    <fr:tex display="block">          \pi _1 \circ \langle  f,g  \rangle _Z = f  \text { and }  \pi _2 \circ \langle  f,g  \rangle _Z = g     </fr:tex></fr:p></fr:mainmatter></fr:tree></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="false" show-heading="true" show-metadata="true" expanded="true" root="false"><fr:frontmatter><fr:anchor>1182</fr:anchor><fr:addr>def</fr:addr><fr:route>def.xml</fr:route><fr:title>Definitions Collection</fr:title></fr:frontmatter><fr:mainmatter><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>695</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-0001</fr:addr><fr:route>def-0001.xml</fr:route><fr:title>Group</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
A <fr:strong>group</fr:strong> is a set <fr:tex>G</fr:tex> with a binary operation <fr:tex>\circ</fr:tex> satisfies the following properties:
<fr:ul><fr:li>Closure: <fr:tex>\forall  a,b \in  G,a  \circ  b \in  G</fr:tex></fr:li>
<fr:li>Associativity: <fr:tex>\forall  a,b,c \in  G, (a \circ  b)  \circ  c= a  \circ  (b  \circ  c)</fr:tex></fr:li>
<fr:li>Identity: <fr:tex>\exists  e \in  G</fr:tex> such that <fr:tex>\forall  g \in  G, g \circ  e=e \circ  g = g</fr:tex></fr:li>
<fr:li>Inverse: <fr:tex>\forall  g \in  G, \exists  g^{-1} \in  G</fr:tex> such that <fr:tex>g \circ  g^{-1}=e</fr:tex></fr:li></fr:ul></fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>696</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-0002</fr:addr><fr:route>def-0002.xml</fr:route><fr:title>Abel Group</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
If in a <fr:link href="def-0001.xml" type="local" addr="def-0001">group</fr:link> <fr:tex>G</fr:tex>, <fr:tex>\forall  a,b \in  G, a \circ  b=b \circ  a</fr:tex> then <fr:tex>G</fr:tex> is called an <fr:strong>abelian (commutative) group</fr:strong>.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>697</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-0003</fr:addr><fr:route>def-0003.xml</fr:route><fr:title>Group Element Order</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
For a group <fr:tex>G</fr:tex> an <fr:tex>x \in  G</fr:tex> define the <fr:strong>order</fr:strong> of <fr:tex>x</fr:tex> be the smallest positive integer <fr:tex>n</fr:tex> (denotes <fr:tex>|x|</fr:tex>) st <fr:tex>x^n=1</fr:tex>. If such <fr:tex>n</fr:tex> does not exist then <fr:tex>x</fr:tex> is said to be of infinite order.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>698</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-0004</fr:addr><fr:route>def-0004.xml</fr:route><fr:title>Multiplication Table</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
Let <fr:tex>G=  \{ g_1, g_2,  \cdots , g_n \}</fr:tex> is finite group. The multiplication table is the <fr:tex>n \times  n</fr:tex> matrix whose <fr:tex>i,j</fr:tex> entry is the group element <fr:tex>g_i  \circ  g_j</fr:tex></fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>699</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-0005</fr:addr><fr:route>def-0005.xml</fr:route><fr:title>Generator</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
A subset <fr:tex>S \in  G</fr:tex> where <fr:tex>\forall  g \in  G</fr:tex> can be written as a (finite) product of <fr:tex>s \in  S</fr:tex> and <fr:tex>s^{-1}</fr:tex> is called a set of <fr:strong>generators</fr:strong> of <fr:tex>G</fr:tex>
<fr:tex>G= \braket {S}</fr:tex></fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>700</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-0006</fr:addr><fr:route>def-0006.xml</fr:route><fr:title>Field</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
A field is a set <fr:tex>F</fr:tex> together with two binary operations <fr:tex>+</fr:tex> and <fr:tex>\times</fr:tex> on <fr:tex>F</fr:tex> st <fr:tex>(F,+)</fr:tex> is an <fr:link href="def-0002.xml" type="local" addr="def-0002">abelian group</fr:link> (identity is <fr:tex>0</fr:tex>) and <fr:tex>(F- \{ 0 \} , \times )</fr:tex> is also an abelian group such that
<fr:tex>a \times (b+c)=a \times  b+a \times  c, \forall  a,b,c \in  F</fr:tex></fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>701</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-0007</fr:addr><fr:route>def-0007.xml</fr:route><fr:title>Monoid</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
A set <fr:tex>S</fr:tex> equipped with a binary operation <fr:tex>S \times  S \to  S</fr:tex>, which we will denote <fr:tex>\circ</fr:tex>, is a <fr:strong>monoid</fr:strong> if it satisfies the following two axioms:
<fr:ul><fr:li>Associativity: <fr:tex>\forall  a,b,c \in  S, (a \circ  b)  \circ  c= a  \circ  (b  \circ  c)</fr:tex></fr:li>
<fr:li>Identity: <fr:tex>\exists  e \in  S</fr:tex> such that <fr:tex>\forall  g \in  S, g \circ  e=e \circ  g = g</fr:tex></fr:li></fr:ul></fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>702</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-0008</fr:addr><fr:route>def-0008.xml</fr:route><fr:title>Group Action</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
A group action of a group <fr:tex>G</fr:tex> on a set <fr:tex>A</fr:tex> is a map from <fr:tex>G \times  A  \to  A</fr:tex> (<fr:tex>g \cdot  a</fr:tex>), <fr:tex>\forall  g \in  G</fr:tex> and <fr:tex>a \in  A</fr:tex> satisfying the following properties:
<fr:ul><fr:li><fr:tex>g_1 \cdot  (g_2 \cdot  a)=(g_1g_2) \cdot  a</fr:tex></fr:li>
<fr:li><fr:tex>\forall  a \in  A,1 \cdot  a = a</fr:tex></fr:li></fr:ul></fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>703</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-0009</fr:addr><fr:route>def-0009.xml</fr:route><fr:title>Group Homomorphism</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
Let <fr:tex>(G, \times )</fr:tex> and <fr:tex>(H, \circ )</fr:tex> be groups. A map <fr:tex>\phi  : G \to  H</fr:tex> such that
<fr:tex>\forall  x,y \in  G, \phi (x \times  y)= \phi (x) \circ \phi (y)</fr:tex> is called a <fr:strong>group homomorphism</fr:strong>.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>704</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000A</fr:addr><fr:route>def-000A.xml</fr:route><fr:title>Subgroups</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
Let <fr:tex>G</fr:tex> be a group and <fr:tex>H</fr:tex> be a nonempty subset of <fr:tex>G</fr:tex> which is closed under operation <fr:tex>\times</fr:tex> and :
<fr:ul><fr:li><fr:tex>\forall  a,b \in  H,a \times  b \in  H</fr:tex></fr:li>
<fr:li><fr:tex>\forall  h \in  H,h^{-1} \in  H</fr:tex></fr:li></fr:ul>
then <fr:tex>H</fr:tex> is a subgroup of <fr:tex>G</fr:tex>. <fr:tex>e=h \times  h^{-1}</fr:tex> is always in group <fr:tex>H</fr:tex></fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>705</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000B</fr:addr><fr:route>def-000B.xml</fr:route><fr:title>Euclidean Topology</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
A subset <fr:tex>S</fr:tex> of <fr:tex>\mathbb {R}</fr:tex> is said to be open in the <fr:strong>euclidean topology</fr:strong> on <fr:tex>\mathbb {R}</fr:tex> if <fr:tex>\forall  x \in  S</fr:tex> there exists <fr:tex>a,b \in \mathbb {R}</fr:tex> with <fr:tex>a&lt;b</fr:tex> st <fr:tex>x \in (a,b) \in  S</fr:tex>.
</fr:p><fr:p>The dual definition (using closed sets) is also valid.</fr:p><fr:p>
For each <fr:tex>a</fr:tex> and <fr:tex>b</fr:tex> in <fr:tex>\mathbb {R}</fr:tex> with <fr:tex>a&lt;b</fr:tex> the closed intervcal <fr:tex>[a,b]</fr:tex> is a closed set in the euclidean topology in <fr:tex>\mathbb {R}</fr:tex>.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>706</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000C</fr:addr><fr:route>def-000C.xml</fr:route><fr:title>Topological Space</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
A <fr:strong>topological space</fr:strong> is a set <fr:tex>S</fr:tex> together with a collection <fr:tex>\tau</fr:tex> of subsets called open sets such that
<fr:ul><fr:li>T1: <fr:tex>S, \varnothing \in \tau</fr:tex></fr:li>
<fr:li>T2: <fr:tex>\forall  U,V \in \tau , U \cap  V \in \tau</fr:tex></fr:li>
<fr:li>T3: The union of any collection of open sets is open.</fr:li></fr:ul></fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>707</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000D</fr:addr><fr:route>def-000D.xml</fr:route><fr:title>Relative Topology</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
Let <fr:tex>(X, \tau )</fr:tex> be a topological space and <fr:tex>A \subseteq  X</fr:tex>. Then <fr:tex>\tau _A= \{ U \cap  A \mid  U \in \tau \}</fr:tex> is a topology on <fr:tex>A</fr:tex> called the <fr:strong>relative topology</fr:strong> on <fr:tex>A</fr:tex> induced by <fr:tex>\tau</fr:tex>.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>708</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000E</fr:addr><fr:route>def-000E.xml</fr:route><fr:title>Co-finite Topology</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
Let <fr:tex>X</fr:tex> be a set. The <fr:strong>co-finite topology</fr:strong> on <fr:tex>X</fr:tex> is the topology <fr:tex>\tau</fr:tex> on <fr:tex>X</fr:tex> whose open sets are <fr:tex>\emptyset</fr:tex> and all subsets of <fr:tex>X</fr:tex> whose complement is finite.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>709</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000F</fr:addr><fr:route>def-000F.xml</fr:route><fr:title>Set of Lambda Terms</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
Let <fr:tex>\Lambda</fr:tex> be the set of lambda terms. Then <fr:tex>\Lambda</fr:tex> is defined inductively as follows:
(<fr:tex>V</fr:tex> is the set of variables)
<fr:ul><fr:li>Variable: <fr:tex>\forall  x \in  V, x \in   \Lambda</fr:tex></fr:li>
<fr:li>Abstraction: <fr:tex>\forall  x \in  V, M \in   \Lambda ,  \lambda  x.M \in   \Lambda</fr:tex></fr:li>
<fr:li>Application: <fr:tex>\forall  M,N \in   \Lambda , (MN) \in   \Lambda</fr:tex></fr:li></fr:ul></fr:p><fr:p>
Another way to define <fr:tex>\Lambda</fr:tex> is to use the following grammar (The 3 possibilities are separated by <fr:code>|</fr:code>):
<fr:tex display="block">\Lambda  = V |  \lambda  V. \Lambda  |  \Lambda \Lambda</fr:tex></fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>710</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000G</fr:addr><fr:route>def-000G.xml</fr:route><fr:title>List</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Let <fr:tex>n</fr:tex> be a natural number. A <fr:strong>list</fr:strong> of length <fr:tex>n</fr:tex> is an ordered collection of <fr:tex>n</fr:tex> elements.
    <fr:tex display="block">         (x_1, x_2,  \dots , x_n)     </fr:tex>
    Two lists are equal if and only if they have the same length and the same elements in the same order.
</fr:p><fr:strong>Addition in Lists</fr:strong><fr:p>
    Let <fr:tex>n</fr:tex> be a natural number. Let <fr:tex>(x_1, x_2,  \dots , x_n)</fr:tex> and <fr:tex>(y_1, y_2,  \dots , y_n)</fr:tex> be lists of length <fr:tex>n</fr:tex>. The <fr:strong>sum</fr:strong> of these lists is the list <fr:tex>(x_1 + y_1, x_2 + y_2,  \dots , x_n + y_n)</fr:tex>.
</fr:p><fr:strong>Additive Inverse in Lists</fr:strong><fr:p>
    Let <fr:tex>n</fr:tex> be a natural number. Let <fr:tex>x=(x_1, x_2,  \dots , x_n)</fr:tex> be a list of length <fr:tex>n</fr:tex>. The <fr:strong>additive inverse</fr:strong> of this list is the list <fr:tex>-x=(-x_1, -x_2,  \dots , -x_n)</fr:tex>.
</fr:p><fr:strong>Scalar Multiplication in Lists</fr:strong><fr:p>
    Let <fr:tex>n</fr:tex> be a natural number. Let <fr:tex>x=(x_1, x_2,  \dots , x_n)</fr:tex> be a list of length <fr:tex>n</fr:tex>. Let <fr:tex>c</fr:tex> be a real number. The <fr:strong>scalar multiplication</fr:strong> of <fr:tex>c</fr:tex> and <fr:tex>x</fr:tex> is the list <fr:tex>cx=(cx_1, cx_2,  \dots , cx_n)</fr:tex>.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>711</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000H</fr:addr><fr:route>def-000H.xml</fr:route><fr:title>Vector Space</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    A vector space over a <fr:link href="def-0006.xml" type="local" addr="def-0006">field</fr:link> <fr:tex>F</fr:tex> is a non-empty set <fr:tex>V</fr:tex> together with a binary operation and a binary function that satisfy the axioms listed below. 
    In this context, the elements of <fr:tex>V</fr:tex> are commonly called <fr:strong>vectors</fr:strong>, and the elements of <fr:tex>F</fr:tex> are called <fr:strong>scalars</fr:strong>.
    <fr:ul><fr:li>Commutativity: <fr:tex>              \forall  x, y  \in  V, x + y = y + x         </fr:tex></fr:li>
        <fr:li>Associativity: <fr:tex>              \forall  x, y, z  \in  V, (x + y) + z = x + (y + z)         </fr:tex></fr:li>
        <fr:li>Additive Identity: <fr:tex>              \exists  0  \in  V  \text { such that }  \forall  x  \in  V, x + 0 = x         </fr:tex></fr:li>
        <fr:li>Multiplicative Identity: <fr:tex>              \forall  x  \in  V, 1x = x         </fr:tex></fr:li>
        <fr:li>Additive Inverse: <fr:tex>              \forall  x  \in  V,  \exists  y  \in  V  \text { such that } x + y = 0         </fr:tex></fr:li>
        <fr:li>Distributivity: <fr:tex>              \forall  x, y  \in  V,  \forall  c, d  \in  F, c(x + y) = cx + cy, (c + d)x = cx + dx         </fr:tex></fr:li></fr:ul></fr:p><fr:p>
    Elements of a vector space are called <fr:strong>vectors</fr:strong> or <fr:strong>points</fr:strong>.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>712</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000I</fr:addr><fr:route>def-000I.xml</fr:route><fr:title>Linear Subspace</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    A subset <fr:tex>U</fr:tex> of a vector space <fr:tex>V</fr:tex> over a field <fr:tex>F</fr:tex> is called a <fr:strong>subspace</fr:strong> of <fr:tex>V</fr:tex> if <fr:tex>U</fr:tex> is itself a <fr:strong>vector space</fr:strong> over <fr:tex>F</fr:tex> with the operations of addition and scalar multiplication on <fr:tex>V</fr:tex>.
    The subset also satisfies the following axioms (vice versa):
    <fr:ul><fr:li>Additive identity: <fr:tex>0 \in  U</fr:tex></fr:li>
        <fr:li>Closure: <fr:tex>\forall  u,v \in  U, u+v \in  U</fr:tex></fr:li>
        <fr:li>Closed Scalar multiplication: <fr:tex>\forall  u \in  U,  \forall  c \in  F, cu \in  U</fr:tex></fr:li></fr:ul></fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>713</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000J</fr:addr><fr:route>def-000J.xml</fr:route><fr:title>Sum of subsets</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Let <fr:tex>U_1,  \dots , U_n</fr:tex> be subsets of a vector space <fr:tex>V</fr:tex>.
    The <fr:strong>sum</fr:strong> of <fr:tex>U_1,  \dots , U_n</fr:tex> is defined as
    <fr:tex display="block">U_1 +  \dots  + U_n =  \{ u_1 +  \dots  + u_n  \mid  u_i  \in  U_i \}</fr:tex>.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>714</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000K</fr:addr><fr:route>def-000K.xml</fr:route><fr:title>Direct Sum</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Let <fr:tex>U_1,  \dots , U_n</fr:tex> be subspaces of a vector space <fr:tex>V</fr:tex>.
    The <fr:strong>direct sum</fr:strong> of <fr:tex>U_1,  \dots , U_n</fr:tex> is defined as
    <fr:tex display="block">         U_1  \oplus   \dots   \oplus  U_n =  \{ u_1 +  \dots  + u_n  \mid  u_i  \in  U_i \}      </fr:tex>
    if every element in <fr:tex>U_1  \oplus   \dots   \oplus  U_n</fr:tex> can be written as <fr:tex>u_1 +  \dots  + u_n </fr:tex> in only one way.
    This definition requires every vector in the sum have a unique representation.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>715</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000L</fr:addr><fr:route>def-000L.xml</fr:route><fr:title>Linear Combination</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Let <fr:tex>V</fr:tex> be a <fr:link href="def-000H.xml" type="local" addr="def-000H">vector space</fr:link> over a field <fr:tex>F</fr:tex>.
    Let <fr:tex>v_1,  \dots , v_n</fr:tex> be vectors in <fr:tex>V</fr:tex>.
    A <fr:strong>linear combination</fr:strong> of <fr:tex>v_1,  \dots , v_n</fr:tex> is an expression of the form
    <fr:tex display="block">         a_1 v_1 +  \dots  + a_n v_n     </fr:tex>
    where <fr:tex>a_1,  \dots , a_n  \in  F</fr:tex>.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>716</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000M</fr:addr><fr:route>def-000M.xml</fr:route><fr:title>Linear Span</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Let <fr:tex>V</fr:tex> be a vector space over a field <fr:tex>F</fr:tex>.
    Let <fr:tex>v_1,  \dots , v_n</fr:tex> be vectors in <fr:tex>V</fr:tex>.
    The <fr:strong>span</fr:strong> of <fr:tex>v_1,  \dots , v_n</fr:tex> is defined as
    <fr:tex display="block">          \text {span} (v_1,  \dots , v_n) =  \{ a_1 v_1 +  \dots  + a_n v_n  \mid  a_i  \in  F \}      </fr:tex>
    The span of empty set is defined to be <fr:tex>\{ 0 \}</fr:tex>.    
</fr:p><fr:p>
    If <fr:tex>\text {span} (v_1,  \dots , v_n) = V</fr:tex>, we say that <fr:tex>v_1,  \dots , v_n</fr:tex> <fr:strong>spans</fr:strong> <fr:tex>V</fr:tex>.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>717</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000N</fr:addr><fr:route>def-000N.xml</fr:route><fr:title>Finite-Dimensional Vector Space</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    A <fr:link href="def-000H.xml" type="local" addr="def-000H">vector space</fr:link> <fr:tex>V</fr:tex> is called <fr:strong>finite-dimensional</fr:strong> if some <fr:link href="def-000G.xml" type="local" addr="def-000G">list</fr:link> of vectors <fr:tex>v_1,  \dots , v_n</fr:tex> <fr:link href="def-000M.xml" type="local" addr="def-000M">spans</fr:link> <fr:tex>V</fr:tex>.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>718</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000O</fr:addr><fr:route>def-000O.xml</fr:route><fr:title>Infinite-dimensional vector space</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    A vector space <fr:tex>V</fr:tex> is called <fr:strong>infinite-dimensional</fr:strong> if it is not <fr:link href="def-000N.xml" type="local" addr="def-000N">finite-dimensional</fr:link>.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>719</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000P</fr:addr><fr:route>def-000P.xml</fr:route><fr:title>Linearly independent</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    A set of vectors <fr:tex>\{ v_1,  \dots , v_n \}</fr:tex> is called <fr:strong>linearly independent</fr:strong> if
    <fr:tex display="block">a_1 v_1 +  \dots  + a_n v_n = 0</fr:tex>
    implies that <fr:tex>a_1 =  \dots  = a_n = 0</fr:tex>.
    The trivial case of <fr:tex>\{ 0 \}</fr:tex> is also considered linearly independent.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>720</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000Q</fr:addr><fr:route>def-000Q.xml</fr:route><fr:title>Linearly dependent</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    A set of vectors <fr:tex>\{ v_1,  \dots , v_n \}</fr:tex> is called <fr:strong>linearly dependent</fr:strong> if
    <fr:tex display="block">a_1 v_1 +  \dots  + a_n v_n = 0</fr:tex>
    for some <fr:tex>a_1,  \dots , a_n  \in   \mathbb {F}</fr:tex> with at least one <fr:tex>a_i  \neq  0</fr:tex> (not all <fr:tex>0</fr:tex>).
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>721</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000R</fr:addr><fr:route>def-000R.xml</fr:route><fr:title>Basis</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    A basis of <fr:tex>V</fr:tex> is a list of vectors in <fr:tex>V</fr:tex>
    that is linearly independent and spans <fr:tex>V</fr:tex>. 
</fr:p><fr:p><fr:strong>Criterion for basis</fr:strong>
    A list of vectors <fr:tex>\{ v_1,  \dots , v_n \}</fr:tex> is a basis of <fr:tex>V</fr:tex> if and only if
    every <fr:tex>v  \in  V</fr:tex> can be written <fr:strong>uniquely</fr:strong> as a linear combination of <fr:tex>v_1,  \dots , v_n</fr:tex>.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>722</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000S</fr:addr><fr:route>def-000S.xml</fr:route><fr:title>ZFC Set</fr:title></fr:frontmatter><fr:mainmatter><fr:p><fr:strong>ZFC</fr:strong> is the abbreviation of Zermelo-Fraenkel set theory with the Axiom of Choice.
    The axioms of ZFC are listed below.
    <fr:ul><fr:li><fr:strong>Axiom of Extensionality</fr:strong>:
            Two sets are equal if and only if they have the same elements.
        </fr:li>
        <fr:li><fr:strong>Axiom of Pairing</fr:strong>:
            For any two sets <fr:tex>a</fr:tex> and <fr:tex>b</fr:tex>,
            there exists a set <fr:tex>\{   a,b   \}</fr:tex> whose elements are exactly <fr:tex>a</fr:tex> and <fr:tex>b</fr:tex>.
        </fr:li>
        <fr:li><fr:strong>Axiom schema of Separation</fr:strong>:
            Let <fr:tex>P</fr:tex> is a property of sets.
            <fr:tex>P(u)</fr:tex> means <fr:tex>u</fr:tex> satisfies the property <fr:tex>P</fr:tex>.
            then for any set <fr:tex>X</fr:tex> exists <fr:tex>Y =  \{   u  \in  X | P(u)   \}</fr:tex>.
        </fr:li>
        <fr:li><fr:strong>Axiom of Union</fr:strong>:
            For any set <fr:tex>X</fr:tex> (a family of sets), exists union set <fr:tex>\bigcup  X : \equiv   \{                    u: \exists  v \in  X  \text { such that } u \in  v                \}</fr:tex>.
        </fr:li>
        <fr:li><fr:strong>Axiom of Power Set</fr:strong>:
            For any set <fr:tex>X</fr:tex>, exists the power <fr:tex>P(X) : \equiv   \{   Y:Y \subseteq  X   \}</fr:tex>.
        </fr:li>
        <fr:li><fr:strong>Axiom of Infinity</fr:strong>:
            There exists a set <fr:tex>\omega</fr:tex> such that <fr:tex>\emptyset \in \omega</fr:tex> and for any <fr:tex>x \in \omega</fr:tex>, <fr:tex>x \cup \{   x   \} \in \omega</fr:tex>.
        </fr:li>
        <fr:li><fr:strong>Axiom of Regularity</fr:strong>:
            For any non-empty set there is a minimal element with respect to the membership relation.
        </fr:li>
        <fr:li><fr:strong>Axiom schema of Replacement</fr:strong>:
            Let <fr:tex>F</fr:tex> be a function where <fr:tex>\text {dom }  f = X</fr:tex>, then for any set <fr:tex>X</fr:tex> exists a set <fr:tex>Y =  \{   F(x):x \in  X   \}</fr:tex>.
            <fr:p>
                This function is not the normal function but some logical stuff.
            </fr:p></fr:li>
        <fr:li><fr:strong>Axiom of Choice</fr:strong>:
            For any family of non-empty sets <fr:tex>X</fr:tex>, there exists a function <fr:tex>f:X \to \bigcup  X</fr:tex> such that for any <fr:tex>x \in  X</fr:tex>, <fr:tex>f(x) \in  x</fr:tex>.
        </fr:li></fr:ul></fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>723</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000T</fr:addr><fr:route>def-000T.xml</fr:route><fr:title>Principle of Extensionality</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Two sets are equal if and only if they have the same elements.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>724</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000U</fr:addr><fr:route>def-000U.xml</fr:route><fr:title>Principle of Comprehension</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Given a set <fr:tex>A</fr:tex> and a property <fr:tex>P(x)</fr:tex>, there exists a set <fr:tex>B</fr:tex> such that
    <fr:tex>x \in  B  \iff  x \in  A  \land  P(x)</fr:tex>.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>725</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000V</fr:addr><fr:route>def-000V.xml</fr:route><fr:title>Cartesian product</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    Given two sets <fr:tex>A</fr:tex> and <fr:tex>B</fr:tex>, the Cartesian product <fr:tex>A \times  B</fr:tex> is the set
    of all ordered pairs <fr:tex>(a,b)</fr:tex> where <fr:tex>a \in  A</fr:tex> and <fr:tex>b \in  B</fr:tex>.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>726</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000W</fr:addr><fr:route>def-000W.xml</fr:route><fr:title>Relation</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    A <fr:strong>relation</fr:strong> <fr:tex>R</fr:tex> is a subset of the Cartesian product of two sets <fr:tex>A</fr:tex> and
    <fr:tex>B</fr:tex>, i.e. <fr:tex>R \subseteq  A \times  B</fr:tex>.
    If <fr:tex>(a,b) \in  R</fr:tex>, we write <fr:tex>aRb</fr:tex>.

    A relation that between <fr:tex>X</fr:tex> and itself is called <fr:strong>homogeneous relation</fr:strong>.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>727</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000X</fr:addr><fr:route>def-000X.xml</fr:route><fr:title>Equivalence Relation</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    An equivalence relation <fr:tex>R</fr:tex> on a set <fr:tex>A</fr:tex> is a <fr:link href="def-000W.xml" type="local" addr="def-000W">relation</fr:link> that is reflexive,
    symmetric, and transitive.
    <fr:ul><fr:li>Reflexive:
            <fr:tex>\forall  x \in  A, xRx</fr:tex></fr:li>
        <fr:li>Symmetric:
            <fr:tex>\forall  x,y \in  A, xRy \implies  yRx</fr:tex></fr:li>
        <fr:li>Transitive:
            <fr:tex>\forall  x,y,z \in  A, xRy \land  yRz \implies  xRz</fr:tex></fr:li></fr:ul>
    We often denote the equivalence relation by <fr:tex>\sim</fr:tex>.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>728</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000Y</fr:addr><fr:route>def-000Y.xml</fr:route><fr:title>Partial Order</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    A <fr:strong>(non-strict) partial order</fr:strong> is a relation <fr:tex>\leq</fr:tex> that is reflexive, antisymmetric and transitive.
    <fr:ul><fr:li>Reflexive: <fr:tex>a \leq  a</fr:tex></fr:li>
        <fr:li>Antisymmetric: <fr:tex>a \leq  b</fr:tex> and <fr:tex>b \leq  a</fr:tex> implies <fr:tex>a=b</fr:tex></fr:li>
        <fr:li>Transitive: <fr:tex>a \leq  b</fr:tex> and <fr:tex>b \leq  c</fr:tex> implies <fr:tex>a \leq  c</fr:tex></fr:li></fr:ul>
    A non-strict partial order is also known as an antisymmetric <fr:link href="def-000Z.xml" type="local" addr="def-000Z">preorder</fr:link>.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>729</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-000Z</fr:addr><fr:route>def-000Z.xml</fr:route><fr:title>Preorder</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    A <fr:strong>preorder</fr:strong> is a relation <fr:tex>\leq</fr:tex> that is reflexive and transitive.
    <fr:ul><fr:li>Reflexive: <fr:tex>a \leq  a</fr:tex></fr:li>
        <fr:li>Transitive: <fr:tex>a \leq  b</fr:tex> and <fr:tex>b \leq  c</fr:tex> implies <fr:tex>a \leq  c</fr:tex></fr:li></fr:ul></fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>730</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-0010</fr:addr><fr:route>def-0010.xml</fr:route><fr:title>Strict partial orders</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    A strict partial order is a relation <fr:tex>&lt;</fr:tex> that is irreflexive, asymmetric and transitive.
    <fr:ul><fr:li>Irreflexive: <fr:tex>\neg (a&lt;a)</fr:tex></fr:li>
        <fr:li>Asymmetric: <fr:tex>a&lt;b</fr:tex> implies <fr:tex>\neg (b&lt;a)</fr:tex></fr:li>
        <fr:li>Transitive: <fr:tex>a&lt;b</fr:tex> and <fr:tex>b&lt;c</fr:tex> implies <fr:tex>a&lt;c</fr:tex></fr:li></fr:ul></fr:p></fr:mainmatter></fr:tree></fr:mainmatter></fr:tree></fr:context><fr:related></fr:related><fr:backlinks></fr:backlinks><fr:references></fr:references></fr:backmatter></fr:tree>