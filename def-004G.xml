<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="default.xsl"?><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="true" expanded="true" root="false"><fr:frontmatter><fr:anchor>1274</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-004G</fr:addr><fr:route>def-004G.xml</fr:route><fr:title>Successor Universe</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    The <fr:strong>successor universee</fr:strong> <fr:tex>\mathcal {U} ^+</fr:tex> of a universe <fr:tex>\mathcal {U}</fr:tex> is defined using <fr:link href="thm-0013.xml" type="local" addr="thm-0013">universe postulate</fr:link>
    with the following contexts:
    <fr:tex display="block">          \vdash \mathcal {U} \space \space \text {type} \quad  X: \mathcal {U} \vdash \mathcal {T} (X) \space \space \text {type}      </fr:tex>
    It therefore contains the type <fr:tex>\mathcal {U}</fr:tex> as well as type in <fr:tex>\mathcal {U}</fr:tex>, in the following sense
    <fr:tex display="block">          \begin {align*}             &amp; \vdash \check { \mathcal {U} }: \mathcal {U} ^+ \\               &amp; \vdash \mathcal {T} ^+( \check { \mathcal {U} }) \equiv \mathcal {U} \space \text {type} \\              &amp;X: \mathcal {U} \vdash \check { \mathcal {T} }(X): \mathcal {U} ^+ \\               &amp;X: \mathcal {U} \vdash \mathcal {T} ^+( \check { \mathcal {T} }(X)) \equiv \mathcal {T} (X) \space \text {type}            \end {align*}     </fr:tex></fr:p></fr:mainmatter><fr:backmatter><fr:contributions></fr:contributions><fr:context><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="false" show-heading="true" show-metadata="true" expanded="true" root="false"><fr:frontmatter><fr:anchor>1273</fr:anchor><fr:taxon>Type Theory</fr:taxon><fr:addr>tt-0006</fr:addr><fr:route>tt-0006.xml</fr:route><fr:title>Universe</fr:title><fr:date><fr:year>2024</fr:year><fr:month>6</fr:month><fr:day>14</fr:day></fr:date></fr:frontmatter><fr:mainmatter><fr:p>
    This post discuss the universe in type theory,
    based on Egbert Rijke&apos;s <fr:link href="hott-2022.xml" type="local" addr="hott-2022">Introduction to Homotopy Type Theory</fr:link> and <fr:link href="ncatlab.xml" type="local" addr="ncatlab">NLab</fr:link>.
    In this post, we regard universe as the representation of types in an internal model 
    of the type theory (<fr:strong>Tarski universe</fr:strong> or <fr:strong>universe Ã  la Tarski</fr:strong>).
</fr:p><fr:p>
    A universe consist of a type <fr:tex>\mathcal {U}</fr:tex> with a type family <fr:tex>\mathcal {T}</fr:tex> over <fr:tex>\mathcal {U}</fr:tex>.
    Forall <fr:tex>X: \mathcal {U}</fr:tex> we think of <fr:tex>X</fr:tex> as an <fr:strong>encoding</fr:strong> (representation) of the actual type <fr:tex>\mathcal {T} (X)</fr:tex>.
    The type family <fr:tex>\mathcal {T}</fr:tex> is therefore called a <fr:strong>unversal type family</fr:strong>.
</fr:p><fr:p>
    There several reasons to equip type theory with universes.
    It enables us to define new type families over inductive types, using induction principle.
    For instance, we can define <fr:strong>relations</fr:strong> over <fr:tex>\mathbb {N}</fr:tex>, such as ordering relations <fr:tex>\leq</fr:tex>.
    We will soon meet the idea of <fr:strong>observational equality</fr:strong> for a particular type, different from identity types.
    Another reason is that it allows us to define types equipped with structure such as group.
</fr:p><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>305</fr:anchor><fr:title>Specification</fr:title><fr:date><fr:year>2024</fr:year><fr:month>6</fr:month><fr:day>14</fr:day></fr:date><fr:parent>tt-0006</fr:parent></fr:frontmatter><fr:mainmatter><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>301</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-004E</fr:addr><fr:route>def-004E.xml</fr:route><fr:title>Tarski Universe</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    A <fr:strong>universe</fr:strong> consists of a type <fr:tex>\mathcal {U}</fr:tex> of which the elements are representations of types.
    It is equipped with a type family <fr:tex>\mathcal {T}</fr:tex> indexed by <fr:tex>\mathcal {U}</fr:tex> called <fr:strong>universal type family</fr:strong>.
    The universe is closed under all the type constructors in the sense that it comes equipped with the following structure:
    <fr:ul><fr:li><fr:tex>\mathcal {U}</fr:tex> is closed under <fr:tex>\Pi</fr:tex>, equipped with a function
            <fr:tex display="block">                  \check { \Pi }: \Pi _{(X: \mathcal {U} )}( \mathcal {T} (X) \to \mathcal {U} ) \to \mathcal {U}              </fr:tex>
            for which the judgemental equality
            <fr:tex display="block">                  \mathcal {T} ( \check { \Pi }(X,P)) \equiv \Pi _{(x: \mathcal {T} (X))} \mathcal {T} (P(x))             </fr:tex>
            holds forall <fr:tex>X: \mathcal {U}</fr:tex> and <fr:tex>P: \mathcal {T} (X) \to \mathcal {U}</fr:tex>.
        </fr:li>
        <fr:li><fr:tex>\mathcal {U}</fr:tex> is closed under <fr:tex>\Sigma</fr:tex>, equipped with a function
            <fr:tex display="block">                  \check { \Sigma }: \Pi _{(X: \mathcal {U} )}( \mathcal {T} (X) \to \mathcal {U} ) \to \mathcal {U}              </fr:tex>
            for which the judgemental equality
            <fr:tex display="block">                  \mathcal {T} ( \check { \Sigma }(X,P)) \equiv \Sigma _{(x: \mathcal {T} (X))} \mathcal {T} (P(x))             </fr:tex>
            holds forall <fr:tex>X: \mathcal {U}</fr:tex> and <fr:tex>P: \mathcal {T} (X) \to \mathcal {U}</fr:tex>.
        </fr:li>
        <fr:li><fr:tex>\mathcal {U}</fr:tex> is closed under identity types, equipped with a function
            <fr:tex display="block">                  \check {I}: \Pi _{(X: \mathcal {U} )} \mathcal {T} (X) \to \mathcal {T} (X) \to \mathcal {U}              </fr:tex>
            for which the judgemental equality
            <fr:tex display="block">                  \mathcal {T} ( \check {I}(X,x,y)) \equiv  (x=y)             </fr:tex>
            holds forall <fr:tex>X: \mathcal {U}</fr:tex> and <fr:tex>x,y: \mathcal {T} (X)</fr:tex>.
        </fr:li>
        <fr:li><fr:tex>\mathcal {U}</fr:tex> is closed under coproducts, equipped with a function
            <fr:tex display="block">                  \check {+}: \Pi _{(X: \mathcal {U} )}( \mathcal {T} (X) \to \mathcal {U} ) \to \mathcal {U}              </fr:tex>
            that satisfies the judgemental equality <fr:tex>\mathcal {T} (X \check {+}P) \equiv \mathcal {T} (X)+ \mathcal {T} (P)</fr:tex></fr:li>
        <fr:li><fr:tex>\mathcal {U}</fr:tex> contains elements <fr:tex>\check { \textbf {1} },  \check { \textbf {0} },  \check { \mathbb {N} } :  \mathcal {U}</fr:tex> that satisfies the judgemental equality
            <fr:tex display="block">                  \mathcal {T} ( \check { \textbf {0} }) \equiv   \textbf {0} ,                  \\   \mathcal {T} ( \check { \textbf {1} }) \equiv   \textbf {1} ,                  \\   \mathcal {T} ( \check { \mathbb {N} }) \equiv \mathbb {N}              </fr:tex></fr:li></fr:ul>
    Consider a universe <fr:tex>\mathcal {U}</fr:tex> and a type <fr:tex>A</fr:tex> in context <fr:tex>\Gamma</fr:tex>.
    We say that <fr:tex>A</fr:tex> is a type in <fr:tex>\mathcal {U}</fr:tex> or that <fr:tex>\mathcal {U}</fr:tex> contains <fr:tex>A</fr:tex>,
    if there is an element <fr:tex>\check {A}: \mathcal {U}</fr:tex> such that <fr:tex>\Gamma \vdash \mathcal {T} ( \check {A}) \equiv  A \space \space \text {type}</fr:tex> holds.
</fr:p><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>300</fr:anchor><fr:title>Enough Universe</fr:title><fr:parent>def-004E</fr:parent></fr:frontmatter><fr:mainmatter><fr:p>
        Sometimes we may consider the universe <fr:tex>\mathcal {U}</fr:tex> itself to be a type in some universes.
        If we have only one <fr:tex>\mathcal {U}</fr:tex>, the <fr:strong>Russell Paradox</fr:strong> may arise.
        Therefore we assume that there are <fr:strong>enough universes</fr:strong></fr:p></fr:mainmatter></fr:tree></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>302</fr:anchor><fr:taxon>Postulate</fr:taxon><fr:addr>thm-0013</fr:addr><fr:route>thm-0013.xml</fr:route><fr:title>Enough Universe</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    We assume that there&apos;re <fr:strong>enough universe</fr:strong>, i.e.,
    for every finite list of types in context 
    <fr:tex display="block">          \Gamma _1 \vdash  A_1 \space \space \text {type} , \cdots , \Gamma _n \vdash  A_n \space \space \text {type}      </fr:tex>
    there is a universe <fr:tex>\mathcal {U}</fr:tex> that contains each <fr:tex>A_i</fr:tex> in the sense that <fr:tex>\mathcal {U}</fr:tex> comes equipped with
    <fr:tex display="block">          \Gamma _i \vdash \check {A_i}: \mathcal {U}      </fr:tex>
    for which the following judgement holds:
    <fr:tex display="block">          \Gamma _i  \vdash \mathcal {T} ( \check {A_i}) \equiv  A_i \space \space \text {type}      </fr:tex></fr:p></fr:mainmatter></fr:tree><fr:p>
        Using the assumption we can obtain many specific universes.
    </fr:p><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>303</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-004F</fr:addr><fr:route>def-004F.xml</fr:route><fr:title>Base Universe</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    The <fr:strong>base universee</fr:strong> <fr:tex>\mathcal {U} _0</fr:tex> is defined using <fr:link href="thm-0013.xml" type="local" addr="thm-0013">universe postulate</fr:link>
    with empty context.
</fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>304</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-004G</fr:addr><fr:route>def-004G.xml</fr:route><fr:title>Successor Universe</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    The <fr:strong>successor universee</fr:strong> <fr:tex>\mathcal {U} ^+</fr:tex> of a universe <fr:tex>\mathcal {U}</fr:tex> is defined using <fr:link href="thm-0013.xml" type="local" addr="thm-0013">universe postulate</fr:link>
    with the following contexts:
    <fr:tex display="block">          \vdash \mathcal {U} \space \space \text {type} \quad  X: \mathcal {U} \vdash \mathcal {T} (X) \space \space \text {type}      </fr:tex>
    It therefore contains the type <fr:tex>\mathcal {U}</fr:tex> as well as type in <fr:tex>\mathcal {U}</fr:tex>, in the following sense
    <fr:tex display="block">          \begin {align*}             &amp; \vdash \check { \mathcal {U} }: \mathcal {U} ^+ \\               &amp; \vdash \mathcal {T} ^+( \check { \mathcal {U} }) \equiv \mathcal {U} \space \text {type} \\              &amp;X: \mathcal {U} \vdash \check { \mathcal {T} }(X): \mathcal {U} ^+ \\               &amp;X: \mathcal {U} \vdash \mathcal {T} ^+( \check { \mathcal {T} }(X)) \equiv \mathcal {T} (X) \space \text {type}            \end {align*}     </fr:tex></fr:p></fr:mainmatter></fr:tree><fr:p>
        Using successor universes we can create an infinite tower of universes.
    </fr:p></fr:mainmatter></fr:tree><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>308</fr:anchor><fr:title>Observational Equality</fr:title><fr:date><fr:year>2024</fr:year><fr:month>6</fr:month><fr:day>14</fr:day></fr:date><fr:parent>tt-0006</fr:parent></fr:frontmatter><fr:mainmatter><fr:p>
        Now we give the example of <fr:strong>observational equality</fr:strong> of <fr:tex>\mathbb {N}</fr:tex>.
        The key idea is to define a recursive function that reduce the arguments.
        Observational equality an inductively defined relation, which gives us an algorithm for checking
        equality on  <fr:tex>\mathbb {N}</fr:tex>. It can be used to show that equality of natural numbers is <fr:strong>decidable</fr:strong>.
    </fr:p><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>307</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>def-004H</fr:addr><fr:route>def-004H.xml</fr:route><fr:title>Observational Equality of <fr:tex>\mathbb {N}</fr:tex></fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    The observational equality of <fr:tex>\mathbb {N}</fr:tex> is a binary relation <fr:tex>\text {Eq} _ \mathbb {N} : \mathbb {N} \to ( \mathbb {N} \to \mathcal {U} _0)</fr:tex> satisfies
    <fr:tex display="block">          \begin {align*}              \text {Eq} _ \mathbb {N} (0)(0) &amp; \equiv   \textbf {1}   \\               \text {Eq} _ \mathbb {N} (0)( \text {succ} (n)) &amp; \equiv   \textbf {0}   \\               \text {Eq} _ \mathbb {N} ( \text {succ} (m))(0) &amp; \equiv   \textbf {0}   \\               \text {Eq} _ \mathbb {N} ( \text {succ} (m))( \text {succ} (n)) &amp; \equiv   \text {Eq} _ \mathbb {N} (m)(n)          \end {align*}     </fr:tex>
    
 
   
   <fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="false" numbered="true" show-heading="true" show-metadata="false" expanded="true" root="false"><fr:frontmatter><fr:anchor>306</fr:anchor><fr:taxon>Proof</fr:taxon><fr:parent>def-004H</fr:parent></fr:frontmatter><fr:mainmatter>
        We define <fr:tex>\text {Eq}</fr:tex> by double induction on <fr:tex>\mathbb {N}</fr:tex>. By the first application of induction
        it suffices to provide
        <fr:tex display="block">              \begin {align*}                 &amp;E_0: \mathbb {N} \to \mathcal {U} _0  \\                   &amp;E_S: \mathbb {N} \to (( \mathbb {N} \to \mathcal {U} _0) \to ( \mathbb {N} \to \mathcal {U} _0))              \end {align*}         </fr:tex>
        we define <fr:tex>E_0</fr:tex> by induction:
        <fr:tex display="block">              \begin {align*}                 &amp;E_0(0)  \equiv \textbf {1} \\                   &amp;E_0( \text {succ} (n))  \equiv \textbf {0}               \end {align*}         </fr:tex>
        and also define <fr:tex>E_S</fr:tex> by induction:
        <fr:tex display="block">              \begin {align*}                 &amp;E_S(n,X,0) \equiv \textbf {0} \\                   &amp;E_S(n,X, \text {succ} (m)) \equiv  X(m)              \end {align*}         </fr:tex>
        Therefore we have by the computation rule for the first induction that 
        the following judgemental equality holds.
        <fr:tex display="block">              \begin {align*}                  \text {Eq} (0,m) &amp; \equiv  E_0(m)  \\                   \text {Eq} ( \text {succ} (n),m) &amp; \equiv  E_S(n, \text {Eq} (n),m)              \end {align*}         </fr:tex>
    </fr:mainmatter></fr:tree></fr:p></fr:mainmatter></fr:tree><fr:p>
        Observational equality of <fr:tex>\mathbb {N}</fr:tex> is a reflexive relation, i.e. we have
        <fr:tex display="block">              \text {refl-Eq}_ \mathbb {N} : \Pi _{(n: \mathbb {N} )} \text {Eq}_ \mathbb {N} (n,n)         </fr:tex>
        which is witnessed by induction on <fr:tex>n</fr:tex>.
        <fr:tex display="block">              \begin {align*}                  \text {refl-Eq}_ \mathbb {N} (0) &amp; \equiv \star   \\                    \text {refl-Eq}_ \mathbb {N} ( \text {succ} (n)) &amp; \equiv \text {refl-Eq}_ \mathbb {N} (n)              \end {align*}         </fr:tex></fr:p><fr:p>
        This leads to an interesting dual perspective on equality. 
        For any two natural numbers <fr:tex>m</fr:tex> and <fr:tex>n</fr:tex> we have
        <fr:tex display="block">             (m=n) \leftrightarrow \text {Eq}_ \mathbb {N} (m,n)         </fr:tex></fr:p><fr:p>
        Using the observational equality of <fr:tex>\mathbb {N}</fr:tex> we can prove Peano&apos;s seventh and eighth
        axioms.
        <fr:ul><fr:li>
                For any two natural numbers <fr:tex>m</fr:tex> and <fr:tex>n</fr:tex> we have 
                <fr:tex display="block">                     (m = n) \leftrightarrow ( \text {succ} (m) =  \text {succ} (n))                 </fr:tex></fr:li>
            <fr:li>
                For any natural number <fr:tex>n</fr:tex> we have <fr:tex>0  \not =  \text {succ} (n)</fr:tex></fr:li></fr:ul></fr:p></fr:mainmatter></fr:tree></fr:mainmatter></fr:tree></fr:context><fr:related><fr:tree xmlns:fr="http://www.jonmsterling.com/jms-005P.xml" toc="true" numbered="false" show-heading="true" show-metadata="true" expanded="true" root="false"><fr:frontmatter><fr:anchor>1272</fr:anchor><fr:taxon>Postulate</fr:taxon><fr:addr>thm-0013</fr:addr><fr:route>thm-0013.xml</fr:route><fr:title>Enough Universe</fr:title></fr:frontmatter><fr:mainmatter><fr:p>
    We assume that there&apos;re <fr:strong>enough universe</fr:strong>, i.e.,
    for every finite list of types in context 
    <fr:tex display="block">          \Gamma _1 \vdash  A_1 \space \space \text {type} , \cdots , \Gamma _n \vdash  A_n \space \space \text {type}      </fr:tex>
    there is a universe <fr:tex>\mathcal {U}</fr:tex> that contains each <fr:tex>A_i</fr:tex> in the sense that <fr:tex>\mathcal {U}</fr:tex> comes equipped with
    <fr:tex display="block">          \Gamma _i \vdash \check {A_i}: \mathcal {U}      </fr:tex>
    for which the following judgement holds:
    <fr:tex display="block">          \Gamma _i  \vdash \mathcal {T} ( \check {A_i}) \equiv  A_i \space \space \text {type}      </fr:tex></fr:p></fr:mainmatter></fr:tree></fr:related><fr:backlinks></fr:backlinks><fr:references></fr:references></fr:backmatter></fr:tree>