<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="forest.xsl"?>
<tree expanded="true" show-heading="true" show-metadata="true" toc="false" numbered="false" root="false"><frontmatter><anchor>8087</anchor>  <taxon>Definition</taxon> <addr>def-002H</addr>  <route>def-002H.xml</route>   <title>Set Isomorphism</title>  </frontmatter> <mainmatter><p>
    Let <tex>X</tex> and <tex>Y</tex> be sets and <tex>f: X  \to  Y</tex> be a function.
    The function <tex>f</tex> is called an <strong>isomorphism</strong> if it is both <link href="def-002D.xml" type="local" addr="def-002D" title="Injective">injective</link> and <link href="def-002F.xml" type="local" addr="def-002F" title="Surjective">surjective</link>.
    In other words, there exists a function <tex>g: Y  \to  X</tex> such that
    <tex display="block">         g  \circ  f =  \text {id} _X  \text { and } f  \circ  g =  \text {id} _Y     </tex>
    where <tex>\text {id} _X</tex> and <tex>\text {id} _Y</tex> are the <strong>identity functions</strong> on <tex>X</tex> and <tex>Y</tex> respectively.
    And we say <tex>f</tex> is <strong>invertible</strong> and <tex>g</tex> is the <strong>inverse</strong> of <tex>f</tex>.
    If there is a isomorphism between <tex>X</tex> and <tex>Y</tex>, we say <tex>X</tex> and <tex>Y</tex> are <strong>isomorphic</strong>,
    denoted by <tex>X  \cong  Y</tex>.
    Isomorphism is an <link href="def-000X.xml" type="local" addr="def-000X" title="Equivalence Relation">equivalence relation</link>.
</p></mainmatter> <backmatter><contributions/> <context><tree expanded="false" show-heading="true" show-metadata="true" toc="false" numbered="false" root="false"><frontmatter><anchor>8088</anchor>  <taxon>Set Theory</taxon> <addr>math-0003</addr>  <route>math-0003.xml</route> <date><year>2024</year> <month>1</month> <day>26</day></date>  <title>Set Theory</title>  </frontmatter> <mainmatter><p>
    Refer to <link href="cat-sci-2013.xml" type="local" addr="cat-sci-2013" title="Category theory for scientists">Category Theory for Scientists</link>.
</p><p><strong>Set</strong> is a common concept in mathematics.
    This post is a brief introduction to set theory aimed at 
    complete all basic knowledge of set theory.
    The following topics will be covered
    <ul><li><strong>Zermelo-Fraenkel Axioms</strong> and <strong>Axiom of Choice</strong></li>
        <li>Cardinality</li>
        <li>Set theory constructions</li></ul></p><p>
    In this post, we use the Zermelo-Fraenkel set theory with the Axiom of Choice (<strong>ZFC</strong>).
</p><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8089</anchor>  <taxon>Definition</taxon> <addr>def-000S</addr>  <route>def-000S.xml</route>   <title>ZFC Set</title>  </frontmatter> <mainmatter><p><strong>ZFC</strong> is the abbreviation of Zermelo-Fraenkel set theory with the Axiom of Choice.
    The axioms of ZFC are listed below.
    <ul><li><strong>Axiom of Extensionality</strong>:
            Two sets are equal if and only if they have the same elements.
        </li>
        <li><strong>Axiom of Pairing</strong>:
            For any two sets <tex>a</tex> and <tex>b</tex>,
            there exists a set <tex>\{   a,b   \}</tex> whose elements are exactly <tex>a</tex> and <tex>b</tex>.
        </li>
        <li><strong>Axiom schema of Separation</strong>:
            Let <tex>P</tex> is a property of sets.
            <tex>P(u)</tex> means <tex>u</tex> satisfies the property <tex>P</tex>.
            then for any set <tex>X</tex> exists <tex>Y =  \{   u  \in  X | P(u)   \}</tex>.
        </li>
        <li><strong>Axiom of Union</strong>:
            For any set <tex>X</tex> (a family of sets), exists union set <tex>\bigcup  X : \equiv   \{                    u: \exists  v \in  X  \text { such that } u \in  v                \}</tex>.
        </li>
        <li><strong>Axiom of Power Set</strong>:
            For any set <tex>X</tex>, exists the power <tex>P(X) : \equiv   \{   Y:Y \subseteq  X   \}</tex>.
        </li>
        <li><strong>Axiom of Infinity</strong>:
            There exists a set <tex>\omega</tex> such that <tex>\emptyset \in \omega</tex> and for any <tex>x \in \omega</tex>, <tex>x \cup \{   x   \} \in \omega</tex>.
        </li>
        <li><strong>Axiom of Regularity</strong>:
            For any non-empty set there is a minimal element with respect to the membership relation.
        </li>
        <li><strong>Axiom schema of Replacement</strong>:
            Let <tex>F</tex> be a function where <tex>\text {dom }  f = X</tex>, then for any set <tex>X</tex> exists a set <tex>Y =  \{   F(x):x \in  X   \}</tex>.
            <p>
                This function is not the normal function but some logical stuff.
            </p></li>
        <li><strong>Axiom of Choice</strong>:
            For any family of non-empty sets <tex>X</tex>, there exists a function <tex>f:X \to \bigcup  X</tex> such that for any <tex>x \in  X</tex>, <tex>f(x) \in  x</tex>.
        </li></ul></p></mainmatter> </tree><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8090</anchor>  <taxon>Definition</taxon> <addr>def-002V</addr>  <route>def-002V.xml</route>   <title>Set Operations</title>  </frontmatter> <mainmatter><p>
    Let <tex>(X_i)_{i \in  I}</tex> be a family of sets.
</p><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8091</anchor>        <title>Union</title>  </frontmatter> <mainmatter><p><tex display="block">          \bigcup _{i \in  I}X_i =  \set {x: \exists  i \in  I  \text { such that } x \in  X_i}     </tex></p></mainmatter> </tree><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8092</anchor>        <title>Intersection</title>  </frontmatter> <mainmatter><p><tex display="block">          \bigcap _{i \in  I}X_i =  \set {x: \forall  i \in  I, x \in  X_i}     </tex>
    Note that <tex>I  \neq   \emptyset</tex> here.
</p></mainmatter> </tree><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8093</anchor>        <title>Disjoint Union</title>  </frontmatter> <mainmatter><p><tex display="block">          \bigsqcup _{i \in  I}X_i =  \set {(x,i):x \in  X_i, i \in  I}     </tex></p></mainmatter> </tree><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8094</anchor>        <title>Product</title>  </frontmatter> <mainmatter><p><tex display="block">          \prod _{i \in  I}X_i =  \set {(x_i)_{i \in  I}: \forall  i \in  I, x_i \in  X_i}     </tex></p></mainmatter> </tree></mainmatter> </tree><p>
    And principles of set theory
</p><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8095</anchor>  <taxon>Definition</taxon> <addr>def-000T</addr>  <route>def-000T.xml</route>   <title>Principle of Extensionality</title>  </frontmatter> <mainmatter><p>
    Two sets are equal if and only if they have the same elements.
</p></mainmatter> </tree><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8096</anchor>  <taxon>Definition</taxon> <addr>def-000U</addr>  <route>def-000U.xml</route>   <title>Principle of Comprehension</title>  </frontmatter> <mainmatter><p>
    Given a set <tex>A</tex> and a property <tex>P(x)</tex>, there exists a set <tex>B</tex> such that
    <tex>x \in  B  \iff  x \in  A  \land  P(x)</tex>.
</p></mainmatter> </tree><p>
    We then define the Cartesian product of two sets
</p><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8097</anchor>  <taxon>Definition</taxon> <addr>def-000V</addr>  <route>def-000V.xml</route>   <title>Cartesian product</title>  </frontmatter> <mainmatter><p>
    Given two sets <tex>A</tex> and <tex>B</tex>, the Cartesian product <tex>A \times  B</tex> is the set
    of all ordered pairs <tex>(a,b)</tex> where <tex>a \in  A</tex> and <tex>b \in  B</tex>.
</p></mainmatter> </tree><p>
    With the Cartesian product, we can define the relation
</p><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8098</anchor>  <taxon>Definition</taxon> <addr>def-000W</addr>  <route>def-000W.xml</route>   <title>Relation</title>  </frontmatter> <mainmatter><p>
    A <strong>relation</strong> <tex>R</tex> is a subset of the Cartesian product of two sets <tex>A</tex> and
    <tex>B</tex>, i.e. <tex>R \subseteq  A \times  B</tex>.
    If <tex>(a,b) \in  R</tex>, we write <tex>aRb</tex>.

    A relation that between <tex>X</tex> and itself is called <strong>homogeneous relation</strong>.
</p></mainmatter> </tree><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8099</anchor>  <taxon>Definition</taxon> <addr>def-000X</addr>  <route>def-000X.xml</route>   <title>Equivalence Relation</title>  </frontmatter> <mainmatter><p>
    An equivalence relation <tex>R</tex> on a set <tex>A</tex> is a <link href="def-000W.xml" type="local" addr="def-000W" title="Relation">relation</link> that is reflexive,
    symmetric, and transitive.
    <ul><li>Reflexive:
            <tex>\forall  x \in  A, xRx</tex></li>
        <li>Symmetric:
            <tex>\forall  x,y \in  A, xRy \implies  yRx</tex></li>
        <li>Transitive:
            <tex>\forall  x,y,z \in  A, xRy \land  yRz \implies  xRz</tex></li></ul>
    We often denote the equivalence relation by <tex>\sim</tex>.
</p></mainmatter> </tree><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8100</anchor>  <taxon>Definition</taxon> <addr>def-002U</addr>  <route>def-002U.xml</route>   <title>Equivalence Class</title>  </frontmatter> <mainmatter><p>
    Let <tex>\sim</tex> be an <link href="def-000X.xml" type="local" addr="def-000X" title="Equivalence Relation">equivalence relation</link> on a set <tex>A</tex>.
    For any element <tex>a \in  A</tex>, the <strong>equivalence class</strong> of <tex>a</tex> is the set
    <tex>[a] =  \set {b \in  A:b \sim  a}</tex>.
    The set of all equivalence classes is denoted by <tex>A/ \sim</tex>,
    which is called the <strong>quotient set</strong> of <tex>A</tex> by <tex>\sim</tex>.
    <p>
        The equivalence class of <tex>a</tex> is also denoted by <tex>\overline {a}</tex>.
    </p></p></mainmatter> </tree><p>
    One of the most important relations is the order relation.
    The basic order relation is the preorder.
</p><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8101</anchor>  <taxon>Definition</taxon> <addr>def-000Z</addr>  <route>def-000Z.xml</route>   <title>Preorder</title>  </frontmatter> <mainmatter><p>
    A <strong>preorder</strong> is a relation <tex>\leq</tex> that is reflexive and transitive.
    <ul><li>Reflexive: <tex>a \leq  a</tex></li>
        <li>Transitive: <tex>a \leq  b</tex> and <tex>b \leq  c</tex> implies <tex>a \leq  c</tex></li></ul></p></mainmatter> </tree><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8102</anchor>  <taxon>Definition</taxon> <addr>def-000Y</addr>  <route>def-000Y.xml</route>   <title>Partial Order</title>  </frontmatter> <mainmatter><p>
    A <strong>(non-strict) partial order</strong> is a relation <tex>\leq</tex> that is reflexive, antisymmetric and transitive.
    <ul><li>Reflexive: <tex>a \leq  a</tex></li>
        <li>Antisymmetric: <tex>a \leq  b</tex> and <tex>b \leq  a</tex> implies <tex>a=b</tex></li>
        <li>Transitive: <tex>a \leq  b</tex> and <tex>b \leq  c</tex> implies <tex>a \leq  c</tex></li></ul>
    A non-strict partial order is also known as an antisymmetric <link href="def-000Z.xml" type="local" addr="def-000Z" title="Preorder">preorder</link>.
</p></mainmatter> </tree><p>
    And the strict partial order (notice the difference between asymmetric and antisymmetric)
</p><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8103</anchor>  <taxon>Definition</taxon> <addr>def-0010</addr>  <route>def-0010.xml</route>   <title>Strict partial orders</title>  </frontmatter> <mainmatter><p>
    A strict partial order is a relation <tex>&lt;</tex> that is irreflexive, asymmetric and transitive.
    <ul><li>Irreflexive: <tex>\neg (a&lt;a)</tex></li>
        <li>Asymmetric: <tex>a&lt;b</tex> implies <tex>\neg (b&lt;a)</tex></li>
        <li>Transitive: <tex>a&lt;b</tex> and <tex>b&lt;c</tex> implies <tex>a&lt;c</tex></li></ul></p></mainmatter> </tree><p>
    With the definition of order, we can define the upper bound and lower bound
</p><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8104</anchor>  <taxon>Definition</taxon> <addr>def-0011</addr>  <route>def-0011.xml</route>   <title>Upper Bound and Lower Bound</title>  </frontmatter> <mainmatter><p>
    Let a subset <tex>S</tex> of a <link href="def-000Y.xml" type="local" addr="def-000Y" title="Partial Order">partially ordered</link> set <tex>(P,  \leq )</tex>,
    <tex>S</tex> is bounded above if there exists <tex>x  \in  P</tex> such that <tex>\forall  y  \in  S, y  \leq  x</tex>. And <tex>x</tex> is called an <strong>upper bound</strong> of <tex>S</tex>.
    Dually, <tex>S</tex> is bounded below if there exists <tex>x  \in  P</tex> such that <tex>\forall  y  \in  S, x  \leq  y</tex>. And <tex>x</tex> is called a <strong>lower bound</strong> of <tex>S</tex>.
</p>
    <p><strong>Supremum (least upper bound)</strong></p>
    <p>
    An element <tex>x \in  P</tex> is a supremum of <tex>S</tex>,
    if for all upper bounds <tex>z  \in  P</tex> of <tex>S</tex>, <tex>x  \leq  z</tex>.
    Denoted as <tex>x =  \sup  S</tex>.
    </p>
    <p><strong>Infimum (greatest lower bound)</strong></p>
    <p>
    An element <tex>x \in  P</tex> is a infimum of <tex>S</tex>,
    if for all lower bounds <tex>z  \in  P</tex> of <tex>S</tex>, <tex>z  \leq  x</tex>.
    Denoted as <tex>x =  \inf  S</tex>.
    </p>
</mainmatter> </tree><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8105</anchor>  <taxon>Definition</taxon> <addr>def-002G</addr>  <route>def-002G.xml</route>   <title>Function</title>  </frontmatter> <mainmatter><p>
    Let <tex>X</tex> and <tex>Y</tex> be sets then a <strong>function</strong> <tex>f:X  \to  Y</tex>
    is a mapping that sends each element of <tex>X</tex> to a unique element of <tex>Y</tex>,
    denoted by <tex>f(x) = y</tex>.
    Function is a special case of <link href="def-000W.xml" type="local" addr="def-000W" title="Relation">relation</link>, and it is a relation that is left-total and right-unique.
    <tex display="block">         f  \in  X  \times  Y  \text { and }  \forall  x  \in  X,  \exists ! y  \in  Y, (x,y)  \in  f     </tex>
    <tex>X</tex> is said to be the <strong>domain</strong> of <tex>f</tex> and <tex>Y</tex> is said to be the <strong>codomain</strong> of <tex>f</tex>,
    where we denote <tex>X =  \text {dom }  f</tex> and <tex>Y =  \text {cod }  f</tex>.
</p><p>
    Two functions <tex>f:X \to  Y</tex> and <tex>g:Y \to  Z</tex> can be <strong>composed</strong> to form a new function <tex>g  \circ  f : X  \to  Z</tex>,
    where the composition is defined by
    <tex display="block">         (g  \circ  f)(x) = g(f(x))      </tex></p><p>
    The set of all functions from <tex>X</tex> to <tex>Y</tex> is denoted by <tex>\hom _ \text {set} (X, Y)</tex>.
</p></mainmatter> </tree><p>
    The isomorphism function is defined as follows
</p><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8106</anchor>  <taxon>Definition</taxon> <addr>def-002H</addr>  <route>def-002H.xml</route>   <title>Set Isomorphism</title>  </frontmatter> <mainmatter><p>
    Let <tex>X</tex> and <tex>Y</tex> be sets and <tex>f: X  \to  Y</tex> be a function.
    The function <tex>f</tex> is called an <strong>isomorphism</strong> if it is both <link href="def-002D.xml" type="local" addr="def-002D" title="Injective">injective</link> and <link href="def-002F.xml" type="local" addr="def-002F" title="Surjective">surjective</link>.
    In other words, there exists a function <tex>g: Y  \to  X</tex> such that
    <tex display="block">         g  \circ  f =  \text {id} _X  \text { and } f  \circ  g =  \text {id} _Y     </tex>
    where <tex>\text {id} _X</tex> and <tex>\text {id} _Y</tex> are the <strong>identity functions</strong> on <tex>X</tex> and <tex>Y</tex> respectively.
    And we say <tex>f</tex> is <strong>invertible</strong> and <tex>g</tex> is the <strong>inverse</strong> of <tex>f</tex>.
    If there is a isomorphism between <tex>X</tex> and <tex>Y</tex>, we say <tex>X</tex> and <tex>Y</tex> are <strong>isomorphic</strong>,
    denoted by <tex>X  \cong  Y</tex>.
    Isomorphism is an <link href="def-000X.xml" type="local" addr="def-000X" title="Equivalence Relation">equivalence relation</link>.
</p></mainmatter> </tree><p>
    With isomorphism, we can define the cardinality of a set.
    Two isomorphic sets have the same cardinality.
</p><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8107</anchor>  <taxon>Definition</taxon> <addr>def-002I</addr>  <route>def-002I.xml</route>   <title>Cardinality</title>  </frontmatter> <mainmatter><p>
    Let <tex>X</tex> be a set and <tex>n  \in   \mathbb {N}</tex>. 
    <tex>A</tex> si said to have <strong>cardinality</strong> <tex>n</tex>, denoted by <tex> |A|= n</tex>,
    if there exists an isomorphism between <tex>A</tex> and <tex>S_n =  \{   1,2, \cdots ,n   \}</tex>.
    If <tex>A</tex> has finite cardinality, we say <tex>A</tex> is <strong>finite</strong>, otherwise
    we say <tex>A</tex> is <strong>infinite</strong>, denoted by <tex>|A|  \geq   \infty</tex>.
</p></mainmatter> </tree><p>
    The next topic is the product of sets
</p><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8108</anchor>  <taxon>Definition</taxon> <addr>def-002J</addr>  <route>def-002J.xml</route>   <title>Product of Sets</title>  </frontmatter> <mainmatter><p>
    Let <tex>X</tex> and <tex>Y</tex> be sets, then the <strong>Cartesian product</strong> of <tex>X</tex> and <tex>Y</tex> is the set
    <tex display="block">         X  \times  Y =  \set {(x,y)  \mid  x  \in  X  \text { and } y  \in  Y}     </tex>
    There are two natural projections from the Cartesian product to the original sets, namely
    <tex display="block">          \pi _1 : X  \times  Y  \to  X  \text { and }  \pi _2 : X  \times  Y  \to  Y     </tex></p></mainmatter> </tree><p>
    This leads to an improtant concept named <strong>universal property</strong>.
</p><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8109</anchor>  <taxon>Lemma</taxon> <addr>thm-000J</addr>  <route>thm-000J.xml</route>   <title>Universal Property for Product of Sets</title>  </frontmatter> <mainmatter><p>
    Let <tex>X</tex> and <tex>Y</tex> be sets.
    For any set <tex>A</tex> and function
    <tex>f: A  \to  X</tex> and <tex>g: A  \to  Y</tex>,
    there exists a <em>unique</em> function <tex>h: A  \to  X  \times  Y</tex> such that
    the following diagram commutes:
    
    <center><embedded-tex hash="4157eb89f51117c585cb94d00d036a56"><embedded-tex-preamble>
       \usepackage {tikz-cd}
       \usepackage {amssymb}
    </embedded-tex-preamble> <embedded-tex-body>
         
         \begin {tikzcd}
            &amp; {X \times  Y}  \\ 
            X &amp;&amp; Y  \\ 
            &amp; A
             \arrow [&quot;{ \pi _1}&quot;', from=1-2, to=2-1]
             \arrow [&quot;{ \pi _2}&quot;, from=1-2, to=2-3]
             \arrow [&quot;f&quot;, from=3-2, to=2-1]
             \arrow [&quot;g&quot;', from=3-2, to=2-3]
             \arrow [&quot;{ \exists !}&quot;, dashed, from=3-2, to=1-2]
         \end {tikzcd}
     
    </embedded-tex-body></embedded-tex></center>

    We might denote the unique function by <tex>\langle  f,g  \rangle : A  \to  X  \times  Y</tex>.
    It is sufficient to define <tex>\langle  f,g  \rangle (a) = (f(a),g(a))</tex> for all <tex>a \in  A</tex> as the unique function.
</p></mainmatter> </tree><p>
    Dual to the product of sets, we have the coproduct of sets
</p><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8110</anchor>  <taxon>Definition</taxon> <addr>def-002K</addr>  <route>def-002K.xml</route>   <title>Coproduct of Sets</title>  </frontmatter> <mainmatter><p>
    Let <tex>X</tex> and <tex>Y</tex> be sets, then the <strong>coproduct</strong> of <tex>X</tex> and <tex>Y</tex> is 
    defined as the <strong>disjoint union</strong> of <tex>X</tex> and <tex>Y</tex>, denoted by <tex>X  \sqcup  Y</tex>.
    There are two natural injections from the original sets to the coproduct, namely
    <tex display="block">         i_1 : X  \to  X  \sqcup  Y  \text { and } i_2 : Y  \to  X  \sqcup  Y     </tex></p></mainmatter> </tree><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8111</anchor>  <taxon>Lemma</taxon> <addr>thm-000K</addr>  <route>thm-000K.xml</route>   <title>Universal Property for Coproduct of Sets</title>  </frontmatter> <mainmatter><p>
    Let <tex>X</tex> and <tex>Y</tex> be sets. For any set <tex>A</tex> and function
    <tex>f : X  \to  A</tex> and <tex>g : Y  \to  A</tex>, there exists a <em>unique</em> function
    <tex>h : X  \sqcup  Y  \to  A</tex> such that the following diagram commutes:
    
    <center><embedded-tex hash="31473672edfba5d6215d76dd08a01a24"><embedded-tex-preamble>
       \usepackage {tikz-cd}
       \usepackage {amssymb}
    </embedded-tex-preamble> <embedded-tex-body>
         
         \begin {tikzcd}
            &amp; A  \\ 
            X &amp;&amp; Y  \\ 
            &amp; {X \sqcup  Y}
             \arrow [&quot;{i_1}&quot;', from=2-1, to=3-2]
             \arrow [&quot;{i_2}&quot;, from=2-3, to=3-2]
             \arrow [&quot;f&quot;, from=2-1, to=1-2]
             \arrow [&quot;g&quot;', from=2-3, to=1-2]
             \arrow [&quot;{ \exists !}&quot;, dashed, from=3-2, to=1-2]
         \end {tikzcd}   
     
    </embedded-tex-body></embedded-tex></center>

    We might denote the unique as <tex>f \sqcup  g: X  \sqcup  Y  \to  A</tex>.
</p></mainmatter> </tree><p>
    In this section we discuss the <em>limits</em> of variously-shaped diagrams of sets.
</p><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8112</anchor>  <taxon>Definition</taxon> <addr>def-002L</addr>  <route>def-002L.xml</route>   <title>Pullback of Sets</title>  </frontmatter> <mainmatter><p>
    Suppose we have sets <tex>X</tex>, <tex>Y</tex>, and <tex>Z</tex> and functions
    <tex>f : X  \to  Z</tex> and <tex>g : Y  \to  Z</tex>.
    
    <center><embedded-tex hash="aea0109fc5888410344cbfd1c2bfad2d"><embedded-tex-preamble>
       \usepackage {tikz-cd}
       \usepackage {amssymb}
    </embedded-tex-preamble> <embedded-tex-body>
         
         \begin {tikzcd}
            &amp; Y  \\ 
            X &amp; Z
             \arrow [&quot;f&quot;', from=2-1, to=2-2]
             \arrow [&quot;g&quot;, from=1-2, to=2-2]
         \end {tikzcd}
     
    </embedded-tex-body></embedded-tex></center>

    Its <strong>fiber product</strong> is the set
    <tex display="block">         X  \times _Z Y =  \{   (x,w,y)  \mid  f(x) = w = g(y)   \}      </tex>
    There are obvious projections 
    <tex>          \pi _1 : X  \times _Z Y  \to  X  \text { and }  \pi _2 : X  \times _Z Y  \to  Y     </tex>
    such that the following diagram commutes (<tex>W = X  \times _Z Y</tex>):
    
    <center><embedded-tex hash="9194755931a1b27a68b010256252d579"><embedded-tex-preamble>
       \usepackage {tikz-cd}
       \usepackage {amssymb}
    </embedded-tex-preamble> <embedded-tex-body>
         
         \begin {tikzcd}
            W &amp; Y  \\ 
            X &amp; Z
             \arrow [&quot;f&quot;', from=2-1, to=2-2]
             \arrow [&quot;g&quot;, from=1-2, to=2-2]
             \arrow [&quot;{ \pi _2}&quot;, from=1-1, to=1-2]
             \arrow [&quot;{ \pi _1}&quot;', from=1-1, to=2-1]
             \arrow [&quot; \lrcorner &quot;{anchor=center, pos=0.125}, draw=none, from=1-1, to=2-2]
         \end {tikzcd}
     
    </embedded-tex-body></embedded-tex></center>

    The <strong>pullback</strong> is defined to be any set <tex>W  \cong  X \times _Z Y</tex>
    The corner symbol indicates <tex>W</tex> is a <em>pullback</em></p></mainmatter> </tree><p>
    The pullback also satisfies the universal property.
</p><tree expanded="true" show-heading="true" show-metadata="false" toc="true" numbered="true" root="false"><frontmatter><anchor>8113</anchor>  <taxon>Lemma</taxon> <addr>thm-000L</addr>  <route>thm-000L.xml</route>   <title>Universal Property for Pullback</title>  </frontmatter> <mainmatter><p>
    Suppose the given diagram:
    
    <center><embedded-tex hash="5e6f2da5af96f3d2b5aa340ada59f646"><embedded-tex-preamble>
       \usepackage {tikz-cd}
       \usepackage {amssymb}
    </embedded-tex-preamble> <embedded-tex-body>
         
         \begin {tikzcd}
            &amp; Y  \\ 
            X &amp; Z
             \arrow [&quot;t&quot;', from=2-1, to=2-2]
             \arrow [&quot;u&quot;, from=1-2, to=2-2]
         \end {tikzcd}
     
    </embedded-tex-body></embedded-tex></center>

    For any set <tex>A</tex> and commutative solid arrow diagram as below
    (functions <tex>f:A \to  X</tex> and <tex>g:A \to  Y</tex> such that <tex>t \circ  f = u \circ  g</tex>):
    
    <center><embedded-tex hash="2d3ff6bcdbabe8193a5f90642c805f62"><embedded-tex-preamble>
       \usepackage {tikz-cd}
       \usepackage {amssymb}
    </embedded-tex-preamble> <embedded-tex-body>
         
         \usetikzlibrary {arrows}
         \begin {tikzcd}
            &amp; {X \times _ZY}  \\ 
             \\ 
            &amp; A  \\ 
            X &amp;&amp; Y  \\ 
            &amp; Z
             \arrow [&quot;f&quot;', from=3-2, to=4-1]
             \arrow [&quot;g&quot;, from=3-2, to=4-3]
             \arrow [&quot;t&quot;', from=4-1, to=5-2]
             \arrow [&quot;u&quot;, from=4-3, to=5-2]
             \arrow [&quot;{ \exists !}&quot;, dashed, from=3-2, to=1-2]
             \arrow [&quot;{ \pi _1}&quot;', bend right, from=1-2, to=4-1]
	         \arrow [&quot;{ \pi _2}&quot;, bend left, from=1-2, to=4-3]
         \end {tikzcd}
     
    </embedded-tex-body></embedded-tex></center>

    there exists a <em>unique</em> arrow <tex>\langle  f,g  \rangle _Z: A \to  X \times _Z Y</tex> such that
    <tex display="block">          \pi _1 \circ \langle  f,g  \rangle _Z = f  \text { and }  \pi _2 \circ \langle  f,g  \rangle _Z = g     </tex></p></mainmatter> </tree></mainmatter> </tree></context> <related><tree expanded="false" show-heading="true" show-metadata="true" toc="false" numbered="false" root="false"><frontmatter><anchor>8114</anchor>  <taxon>Definition</taxon> <addr>def-000X</addr>  <route>def-000X.xml</route>   <title>Equivalence Relation</title>  </frontmatter> <mainmatter><p>
    An equivalence relation <tex>R</tex> on a set <tex>A</tex> is a <link href="def-000W.xml" type="local" addr="def-000W" title="Relation">relation</link> that is reflexive,
    symmetric, and transitive.
    <ul><li>Reflexive:
            <tex>\forall  x \in  A, xRx</tex></li>
        <li>Symmetric:
            <tex>\forall  x,y \in  A, xRy \implies  yRx</tex></li>
        <li>Transitive:
            <tex>\forall  x,y,z \in  A, xRy \land  yRz \implies  xRz</tex></li></ul>
    We often denote the equivalence relation by <tex>\sim</tex>.
</p></mainmatter> </tree><tree expanded="false" show-heading="true" show-metadata="true" toc="false" numbered="false" root="false"><frontmatter><anchor>8115</anchor>  <taxon>Definition</taxon> <addr>def-002D</addr>  <route>def-002D.xml</route>   <title>Injective</title>  </frontmatter> <mainmatter><p>
    A function <tex>f: X  \to  Y</tex> is <strong>injective</strong> if for any two elements <tex>x_1,x_2  \in  X</tex>,
    <tex display="block">         f(x_1) = f(x_2)  \quad   \text {implies}  \quad  x_1 = x_2     </tex></p></mainmatter> </tree><tree expanded="false" show-heading="true" show-metadata="true" toc="false" numbered="false" root="false"><frontmatter><anchor>8116</anchor>  <taxon>Definition</taxon> <addr>def-002F</addr>  <route>def-002F.xml</route>   <title>Surjective</title>  </frontmatter> <mainmatter><p>
    A function <tex>f: X  \to  Y</tex> is <strong>surjective</strong> if for any element <tex>y  \in  Y</tex>, there exists an element <tex>x  \in  X</tex> such that <tex>f(x) = y</tex>.
    <tex display="block">          \text {range }  f = Y     </tex></p></mainmatter> </tree></related> <backlinks/> <references/></backmatter></tree>